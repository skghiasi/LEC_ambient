ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_SEQ.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_SEQ_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_SAR_SEQ_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_SAR_SEQ_Init, %function
  25              	ADC_SAR_SEQ_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_SEQ.c"
   1:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * File Name: ADC_SAR_SEQ.c
   3:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #include "ADC_SAR_SEQ.h"
  19:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** uint8 ADC_SAR_SEQ_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** volatile int16 ADC_SAR_SEQ_offset[ADC_SAR_SEQ_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** volatile int32 ADC_SAR_SEQ_countsPer10Volt[ADC_SAR_SEQ_TOTAL_CHANNELS_NUM];   /* Gain compensation 
  27:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Local data allocation
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 2


  31:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** static const uint32 CYCODE ADC_SAR_SEQ_channelsConfig[] = { 0x00000402u };
  34:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Start
  38:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  The ADC_SAR_SEQ_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  to zero before call of ADC_SAR_SEQ_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Init() and ADC_SAR_SEQ_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
  65:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if(ADC_SAR_SEQ_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_Init();
  69:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Init
  77:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start().
  83:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 3


  88:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  The ADC_SAR_SEQ_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         static const uint8 CYCODE ADC_SAR_SEQ_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****              (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 4


 137:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CyIntSetPriority(ADC_SAR_SEQ_INTC_NUMBER, ADC_SAR_SEQ_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0E20     		movs	r0, #14
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         (void)CyIntSetVector(ADC_SAR_SEQ_INTC_NUMBER, &ADC_SAR_SEQ_ISR);
  41              		.loc 1 173 0
  42 000a 2949     		ldr	r1, .L6
  43 000c 0E20     		movs	r0, #14
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif   /* End ADC_SAR_SEQ_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CHAN_EN_REG = ADC_SAR_SEQ_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 274B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 5


 180:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         (((ADC_SAR_SEQ_PUMP_CTRL_REG & ADC_SAR_SEQ_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 274B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2649     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2649     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 274A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 264A     		ldr	r2, .L6+24
  68 0030 264B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG = ADC_SAR_SEQ_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 264A     		ldr	r2, .L6+32
  72 0036 274B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_COND_REG  = ADC_SAR_SEQ_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 8022     		movs	r2, #128
  76 003c D205     		lsls	r2, r2, #23
  77 003e 264B     		ldr	r3, .L6+40
  78 0040 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_TIME01_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_TIME01_REG_CFG;
  79              		.loc 1 185 0 discriminator 4
  80 0042 264B     		ldr	r3, .L6+44
  81 0044 264A     		ldr	r2, .L6+48
  82 0046 1360     		str	r3, [r2]
 186:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_TIME23_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_TIME23_REG_CFG;
  83              		.loc 1 186 0 discriminator 4
  84 0048 264A     		ldr	r2, .L6+52
  85 004a 1360     		str	r3, [r2]
 187:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_MUX_SWITCH0_REG |= ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0;
  86              		.loc 1 190 0 discriminator 4
  87 004c 264A     		ldr	r2, .L6+56
  88 004e 1368     		ldr	r3, [r2]
  89 0050 8021     		movs	r1, #128
  90 0052 4902     		lsls	r1, r1, #9
  91 0054 0B43     		orrs	r3, r1
  92 0056 1360     		str	r3, [r2]
 191:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 6


 192:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ADC_SAR_SEQ_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /*ADC_SAR_SEQ_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG = 0u;
  93              		.loc 1 197 0 discriminator 4
  94 0058 0023     		movs	r3, #0
  95 005a 244A     		ldr	r2, .L6+60
  96 005c 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG = 0u;
  97              		.loc 1 198 0 discriminator 4
  98 005e 244A     		ldr	r2, .L6+64
  99 0060 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_INTR_MASK_REG = ADC_SAR_SEQ_SAR_INTR_MASK;
 100              		.loc 1 199 0 discriminator 4
 101 0062 0133     		adds	r3, r3, #1
 102 0064 234A     		ldr	r2, .L6+68
 103 0066 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_ANA_TRIM_REG = ADC_SAR_SEQ_TRIM_COEF;
 104              		.loc 1 202 0 discriminator 4
 105 0068 0221     		movs	r1, #2
 106 006a 234A     		ldr	r2, .L6+72
 107 006c 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* (ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     tmpRegVal = ADC_SAR_SEQ_SAR_DFT_CTRL_REG;
 108              		.loc 1 206 0 discriminator 4
 109 006e 2349     		ldr	r1, .L6+76
 110 0070 0868     		ldr	r0, [r1]
 111              	.LVL2:
 207:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     tmpRegVal &= (uint32)~ADC_SAR_SEQ_DCEN;
 112              		.loc 1 207 0 discriminator 4
 113 0072 234A     		ldr	r2, .L6+80
 114 0074 0240     		ands	r2, r0
 115              	.LVL3:
 208:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_NOMINAL_CLOCK_FREQ > (ADC_SAR_SEQ_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_DLY_INC;
 116              		.loc 1 213 0 discriminator 4
 117 0076 1343     		orrs	r3, r2
 118              	.LVL4:
 214:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if ((ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****              (ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal &= (uint32)~ADC_SAR_SEQ_DLY_INC;
 222:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ((ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNAL1024) || \
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 7


 223:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                    (ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* (ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_DFT_CTRL_REG = tmpRegVal;
 119              		.loc 1 226 0 discriminator 4
 120 0078 0B60     		str	r3, [r1]
 121              	.LVL5:
 227:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_WOUNDING_REG = ADC_SAR_SEQ_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     for(chNum = 0u; chNum < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM; chNum++)
 122              		.loc 1 232 0 discriminator 4
 123 007a 0023     		movs	r3, #0
 124              	.LVL6:
 125 007c 15E0     		b	.L3
 126              	.LVL7:
 127              	.L4:
 233:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         tmpRegVal = (ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if((ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (ADC_SAR_SEQ_ALT_WOUNDING == ADC_SAR_SEQ_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal &= (uint32)(~ADC_SAR_SEQ_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if(chNum < ADC_SAR_SEQ_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_SEQ_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegV
 128              		.loc 1 253 0
 129 007e 9800     		lsls	r0, r3, #2
 130 0080 204A     		ldr	r2, .L6+84
 131 0082 8218     		adds	r2, r0, r2
 132 0084 8021     		movs	r1, #128
 133 0086 C900     		lsls	r1, r1, #3
 134 0088 1160     		str	r1, [r2]
 254:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 135              		.loc 1 262 0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 8


 136 008a 194C     		ldr	r4, .L6+64
 137 008c 2168     		ldr	r1, [r4]
 138 008e 0122     		movs	r2, #1
 139 0090 9A40     		lsls	r2, r2, r3
 140 0092 1204     		lsls	r2, r2, #16
 141 0094 120C     		lsrs	r2, r2, #16
 142 0096 0A43     		orrs	r2, r1
 143 0098 2260     		str	r2, [r4]
 144              	.LVL8:
 263:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 CY_SET_REG32(ADC_SAR_SEQ_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_SEQ_INJ_TAILG
 269:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                     ADC_SAR_SEQ_SAR_INTR_MASK_REG |= ADC_SAR_SEQ_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                     ADC_SAR_SEQ_SAR_INTR_MASK_REG |= ADC_SAR_SEQ_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                counts = (int32)ADC_SAR_SEQ_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                counts = (int32)ADC_SAR_SEQ_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if((ADC_SAR_SEQ_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 (ADC_SAR_SEQ_DEFAULT_NEG_INPUT_SEL == ADC_SAR_SEQ__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = 0;
 145              		.loc 1 298 0
 146 009a 5900     		lsls	r1, r3, #1
 147 009c 0024     		movs	r4, #0
 148 009e 1A4A     		ldr	r2, .L6+88
 149 00a0 8C52     		strh	r4, [r1, r2]
 299:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = (int16)(counts / 2);
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 9


 306:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* end ADC_SAR_SEQ_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_SEQ_10MV_COUNTS) +
 150              		.loc 1 311 0
 151 00a2 1A49     		ldr	r1, .L6+92
 152 00a4 1A4A     		ldr	r2, .L6+96
 153 00a6 8150     		str	r1, [r0, r2]
 232:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 154              		.loc 1 232 0
 155 00a8 0133     		adds	r3, r3, #1
 156              	.LVL9:
 157              	.L3:
 232:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 158              		.loc 1 232 0 is_stmt 0 discriminator 1
 159 00aa 002B     		cmp	r3, #0
 160 00ac E7D0     		beq	.L4
 312:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                             ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE
 313:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 161              		.loc 1 314 0 is_stmt 1
 162              		@ sp needed
 163 00ae 10BD     		pop	{r4, pc}
 164              	.L7:
 165              		.align	2
 166              	.L6:
 167 00b0 00000000 		.word	ADC_SAR_SEQ_ISR
 168 00b4 20001A40 		.word	1075445792
 169 00b8 80031A40 		.word	1075446656
 170 00bc 70021053 		.word	1393558128
 171 00c0 70020053 		.word	1392509552
 172 00c4 00001A40 		.word	1075445760
 173 00c8 CD000080 		.word	-2147483443
 174 00cc 04001A40 		.word	1075445764
 175 00d0 0000FF0F 		.word	268369920
 176 00d4 18001A40 		.word	1075445784
 177 00d8 1C001A40 		.word	1075445788
 178 00dc 04000400 		.word	262148
 179 00e0 10001A40 		.word	1075445776
 180 00e4 14001A40 		.word	1075445780
 181 00e8 00031A40 		.word	1075446528
 182 00ec 28021A40 		.word	1075446312
 183 00f0 38021A40 		.word	1075446328
 184 00f4 18021A40 		.word	1075446296
 185 00f8 000F1A40 		.word	1075449600
 186 00fc 30001A40 		.word	1075445808
 187 0100 FFFFFFDF 		.word	-536870913
 188 0104 80001A40 		.word	1075445888
 189 0108 00000000 		.word	ADC_SAR_SEQ_offset
 190 010c 3E180000 		.word	6206
 191 0110 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 192              		.cfi_endproc
 193              	.LFE1:
 194              		.size	ADC_SAR_SEQ_Init, .-ADC_SAR_SEQ_Init
 195              		.section	.text.ADC_SAR_SEQ_Enable,"ax",%progbits
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 10


 196              		.align	2
 197              		.global	ADC_SAR_SEQ_Enable
 198              		.code	16
 199              		.thumb_func
 200              		.type	ADC_SAR_SEQ_Enable, %function
 201              	ADC_SAR_SEQ_Enable:
 202              	.LFB2:
 315:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 203              		.loc 1 331 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 10B5     		push	{r4, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if (0u == (ADC_SAR_SEQ_SAR_CTRL_REG & ADC_SAR_SEQ_ENABLE))
 211              		.loc 1 332 0
 212 0002 074B     		ldr	r3, .L10
 213 0004 1B68     		ldr	r3, [r3]
 214 0006 002B     		cmp	r3, #0
 215 0008 08DB     		blt	.L8
 333:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_CY_SAR_IP_VER != ADC_SAR_SEQ_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             while (0u != (ADC_SAR_SEQ_SAR_STATUS_REG & ADC_SAR_SEQ_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* (ADC_SAR_SEQ_CY_SAR_IP_VER != ADC_SAR_SEQ_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_ENABLE;
 216              		.loc 1 342 0
 217 000a 054A     		ldr	r2, .L10
 218 000c 1368     		ldr	r3, [r2]
 219 000e 8021     		movs	r1, #128
 220 0010 0906     		lsls	r1, r1, #24
 221 0012 0B43     		orrs	r3, r1
 222 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 11


 345:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CyDelayUs(ADC_SAR_SEQ_10US_DELAY);         
 223              		.loc 1 345 0
 224 0016 0A20     		movs	r0, #10
 225 0018 FFF7FEFF 		bl	CyDelayUs
 226              	.LVL10:
 227              	.L8:
 346:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 228              		.loc 1 347 0
 229              		@ sp needed
 230 001c 10BD     		pop	{r4, pc}
 231              	.L11:
 232 001e C046     		.align	2
 233              	.L10:
 234 0020 00001A40 		.word	1075445760
 235              		.cfi_endproc
 236              	.LFE2:
 237              		.size	ADC_SAR_SEQ_Enable, .-ADC_SAR_SEQ_Enable
 238              		.section	.text.ADC_SAR_SEQ_Start,"ax",%progbits
 239              		.align	2
 240              		.global	ADC_SAR_SEQ_Start
 241              		.code	16
 242              		.thumb_func
 243              		.type	ADC_SAR_SEQ_Start, %function
 244              	ADC_SAR_SEQ_Start:
 245              	.LFB0:
  64:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* If not Initialized then initialize all required hardware and software */
 246              		.loc 1 64 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 10B5     		push	{r4, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 254              		.loc 1 66 0
 255 0002 064B     		ldr	r3, .L14
 256 0004 1B78     		ldrb	r3, [r3]
 257 0006 002B     		cmp	r3, #0
 258 0008 04D1     		bne	.L13
  68:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_initVar = 1u;
 259              		.loc 1 68 0
 260 000a FFF7FEFF 		bl	ADC_SAR_SEQ_Init
 261              	.LVL11:
  69:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 262              		.loc 1 69 0
 263 000e 0122     		movs	r2, #1
 264 0010 024B     		ldr	r3, .L14
 265 0012 1A70     		strb	r2, [r3]
 266              	.L13:
  71:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 267              		.loc 1 71 0
 268 0014 FFF7FEFF 		bl	ADC_SAR_SEQ_Enable
 269              	.LVL12:
  72:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 270              		.loc 1 72 0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 12


 271              		@ sp needed
 272 0018 10BD     		pop	{r4, pc}
 273              	.L15:
 274 001a C046     		.align	2
 275              	.L14:
 276 001c 00000000 		.word	.LANCHOR0
 277              		.cfi_endproc
 278              	.LFE0:
 279              		.size	ADC_SAR_SEQ_Start, .-ADC_SAR_SEQ_Start
 280              		.section	.text.ADC_SAR_SEQ_Stop,"ax",%progbits
 281              		.align	2
 282              		.global	ADC_SAR_SEQ_Stop
 283              		.code	16
 284              		.thumb_func
 285              		.type	ADC_SAR_SEQ_Stop, %function
 286              	ADC_SAR_SEQ_Stop:
 287              	.LFB3:
 348:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Stop
 352:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 288              		.loc 1 366 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG &= (uint32)~ADC_SAR_SEQ_ENABLE;
 293              		.loc 1 367 0
 294 0000 024A     		ldr	r2, .L17
 295 0002 1368     		ldr	r3, [r2]
 296 0004 5B00     		lsls	r3, r3, #1
 297 0006 5B08     		lsrs	r3, r3, #1
 298 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 299              		.loc 1 368 0
 300              		@ sp needed
 301 000a 7047     		bx	lr
 302              	.L18:
 303              		.align	2
 304              	.L17:
 305 000c 00001A40 		.word	1075445760
 306              		.cfi_endproc
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 13


 307              	.LFE3:
 308              		.size	ADC_SAR_SEQ_Stop, .-ADC_SAR_SEQ_Stop
 309              		.section	.text.ADC_SAR_SEQ_StartConvert,"ax",%progbits
 310              		.align	2
 311              		.global	ADC_SAR_SEQ_StartConvert
 312              		.code	16
 313              		.thumb_func
 314              		.type	ADC_SAR_SEQ_StartConvert, %function
 315              	ADC_SAR_SEQ_StartConvert:
 316              	.LFB4:
 369:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 317              		.loc 1 392 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_SEQ__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SEQ_CONTINUOUS_EN;
 322              		.loc 1 394 0
 323 0000 034A     		ldr	r2, .L20
 324 0002 1368     		ldr	r3, [r2]
 325 0004 8021     		movs	r1, #128
 326 0006 4902     		lsls	r1, r1, #9
 327 0008 0B43     		orrs	r3, r1
 328 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_START_CTRL_REG = ADC_SAR_SEQ_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* End ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE == ADC_SAR_SEQ__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 329              		.loc 1 399 0
 330              		@ sp needed
 331 000c 7047     		bx	lr
 332              	.L21:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 14


 333 000e C046     		.align	2
 334              	.L20:
 335 0010 04001A40 		.word	1075445764
 336              		.cfi_endproc
 337              	.LFE4:
 338              		.size	ADC_SAR_SEQ_StartConvert, .-ADC_SAR_SEQ_StartConvert
 339              		.section	.text.ADC_SAR_SEQ_StopConvert,"ax",%progbits
 340              		.align	2
 341              		.global	ADC_SAR_SEQ_StopConvert
 342              		.code	16
 343              		.thumb_func
 344              		.type	ADC_SAR_SEQ_StopConvert, %function
 345              	ADC_SAR_SEQ_StopConvert:
 346              	.LFB5:
 400:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 347              		.loc 1 417 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_SEQ__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_SEQ_CONTINUOUS_EN);
 352              		.loc 1 419 0
 353 0000 024A     		ldr	r2, .L23
 354 0002 1168     		ldr	r1, [r2]
 355 0004 024B     		ldr	r3, .L23+4
 356 0006 0B40     		ands	r3, r1
 357 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE == ADC_SAR_SEQ__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 358              		.loc 1 421 0
 359              		@ sp needed
 360 000a 7047     		bx	lr
 361              	.L24:
 362              		.align	2
 363              	.L23:
 364 000c 04001A40 		.word	1075445764
 365 0010 FFFFFEFF 		.word	-65537
 366              		.cfi_endproc
 367              	.LFE5:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 15


 368              		.size	ADC_SAR_SEQ_StopConvert, .-ADC_SAR_SEQ_StopConvert
 369              		.section	.text.ADC_SAR_SEQ_IsEndConversion,"ax",%progbits
 370              		.align	2
 371              		.global	ADC_SAR_SEQ_IsEndConversion
 372              		.code	16
 373              		.thumb_func
 374              		.type	ADC_SAR_SEQ_IsEndConversion, %function
 375              	ADC_SAR_SEQ_IsEndConversion:
 376              	.LFB6:
 422:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** uint32 ADC_SAR_SEQ_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 377              		.loc 1 451 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL13:
 383 0000 0200     		movs	r2, r0
 384              	.LVL14:
 452:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if((retMode & (ADC_SAR_SEQ_RETURN_STATUS | ADC_SAR_SEQ_WAIT_FOR_RESULT)) != 0u)
 385              		.loc 1 454 0
 386 0002 8307     		lsls	r3, r0, #30
 387 0004 0CD0     		beq	.L29
 388              	.LVL15:
 389              	.L28:
 455:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         do
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 16


 457:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             status = ADC_SAR_SEQ_SAR_INTR_REG & ADC_SAR_SEQ_EOS_MASK;
 390              		.loc 1 458 0 discriminator 2
 391 0006 074B     		ldr	r3, .L30
 392 0008 1B68     		ldr	r3, [r3]
 393 000a 0120     		movs	r0, #1
 394 000c 1840     		ands	r0, r3
 395              	.LVL16:
 459:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }while((status == 0u) && ((retMode & ADC_SAR_SEQ_WAIT_FOR_RESULT) != 0u));
 396              		.loc 1 459 0 discriminator 2
 397 000e 01D1     		bne	.L27
 398              		.loc 1 459 0 is_stmt 0 discriminator 1
 399 0010 9307     		lsls	r3, r2, #30
 400 0012 F8D4     		bmi	.L28
 401              	.L27:
 460:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if(status != 0u)
 402              		.loc 1 461 0 is_stmt 1
 403 0014 0028     		cmp	r0, #0
 404 0016 04D0     		beq	.L26
 462:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ADC_SAR_SEQ_SAR_INTR_REG = ADC_SAR_SEQ_EOS_MASK;
 405              		.loc 1 464 0
 406 0018 0122     		movs	r2, #1
 407              	.LVL17:
 408 001a 024B     		ldr	r3, .L30
 409 001c 1A60     		str	r2, [r3]
 410 001e 00E0     		b	.L26
 411              	.LVL18:
 412              	.L29:
 452:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 413              		.loc 1 452 0
 414 0020 0020     		movs	r0, #0
 415              	.LVL19:
 416              	.L26:
 465:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((retMode & (ADC_SAR_SEQ_RETURN_STATUS_INJ | ADC_SAR_SEQ_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 status |= ADC_SAR_SEQ_SAR_INTR_REG & ADC_SAR_SEQ_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }while(((status & ADC_SAR_SEQ_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                    ((retMode & ADC_SAR_SEQ_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((status & ADC_SAR_SEQ_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_INTR_REG = ADC_SAR_SEQ_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     return (status);
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 17


 486:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 417              		.loc 1 486 0
 418              		@ sp needed
 419 0022 7047     		bx	lr
 420              	.L31:
 421              		.align	2
 422              	.L30:
 423 0024 10021A40 		.word	1075446288
 424              		.cfi_endproc
 425              	.LFE6:
 426              		.size	ADC_SAR_SEQ_IsEndConversion, .-ADC_SAR_SEQ_IsEndConversion
 427              		.section	.text.ADC_SAR_SEQ_GetResult16,"ax",%progbits
 428              		.align	2
 429              		.global	ADC_SAR_SEQ_GetResult16
 430              		.code	16
 431              		.thumb_func
 432              		.type	ADC_SAR_SEQ_GetResult16, %function
 433              	ADC_SAR_SEQ_GetResult16:
 434              	.LFB7:
 487:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** int16 ADC_SAR_SEQ_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 435              		.loc 1 505 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              	.LVL20:
 440 0000 10B5     		push	{r4, lr}
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 4, -8
 443              		.cfi_offset 14, -4
 444 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 445              		.loc 1 509 0
 446 0004 02D0     		beq	.L33
 447              		.loc 1 509 0 is_stmt 0 discriminator 1
 448 0006 0020     		movs	r0, #0
 449              	.LVL21:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 18


 450 0008 FFF7FEFF 		bl	CyHalt
 451              	.LVL22:
 452              	.L33:
 510:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if(chan < ADC_SAR_SEQ_SEQUENCED_CHANNELS_NUM)
 453              		.loc 1 511 0 is_stmt 1
 454 000c 002C     		cmp	r4, #0
 455 000e 07D1     		bne	.L35
 512:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_SEQ_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 456              		.loc 1 513 0
 457 0010 A400     		lsls	r4, r4, #2
 458              	.LVL23:
 459 0012 054B     		ldr	r3, .L36
 460 0014 9C46     		mov	ip, r3
 461 0016 6444     		add	r4, r4, ip
 462 0018 2068     		ldr	r0, [r4]
 463 001a 0004     		lsls	r0, r0, #16
 464 001c 000C     		lsrs	r0, r0, #16
 465              	.LVL24:
 466 001e 00E0     		b	.L34
 467              	.LVL25:
 468              	.L35:
 514:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             result = ADC_SAR_SEQ_SAR_INJ_RESULT_REG & ADC_SAR_SEQ_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             result = 0u;
 469              		.loc 1 521 0
 470 0020 0020     		movs	r0, #0
 471              	.LVL26:
 472              	.L34:
 522:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     return ( (int16)result );
 473              		.loc 1 525 0
 474 0022 00B2     		sxth	r0, r0
 475              	.LVL27:
 526:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 476              		.loc 1 526 0
 477              		@ sp needed
 478 0024 10BD     		pop	{r4, pc}
 479              	.L37:
 480 0026 C046     		.align	2
 481              	.L36:
 482 0028 80011A40 		.word	1075446144
 483              		.cfi_endproc
 484              	.LFE7:
 485              		.size	ADC_SAR_SEQ_GetResult16, .-ADC_SAR_SEQ_GetResult16
 486              		.section	.text.ADC_SAR_SEQ_SetChanMask,"ax",%progbits
 487              		.align	2
 488              		.global	ADC_SAR_SEQ_SetChanMask
 489              		.code	16
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 19


 490              		.thumb_func
 491              		.type	ADC_SAR_SEQ_SetChanMask, %function
 492              	ADC_SAR_SEQ_SetChanMask:
 493              	.LFB8:
 527:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 494              		.loc 1 550 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499              	.LVL28:
 551:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CHAN_EN_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 500              		.loc 1 551 0
 501 0000 0123     		movs	r3, #1
 502 0002 1840     		ands	r0, r3
 503              	.LVL29:
 504 0004 014B     		ldr	r3, .L39
 505 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 506              		.loc 1 552 0
 507              		@ sp needed
 508 0008 7047     		bx	lr
 509              	.L40:
 510 000a C046     		.align	2
 511              	.L39:
 512 000c 20001A40 		.word	1075445792
 513              		.cfi_endproc
 514              	.LFE8:
 515              		.size	ADC_SAR_SEQ_SetChanMask, .-ADC_SAR_SEQ_SetChanMask
 516              		.section	.text.ADC_SAR_SEQ_SetLowLimit,"ax",%progbits
 517              		.align	2
 518              		.global	ADC_SAR_SEQ_SetLowLimit
 519              		.code	16
 520              		.thumb_func
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 20


 521              		.type	ADC_SAR_SEQ_SetLowLimit, %function
 522              	ADC_SAR_SEQ_SetLowLimit:
 523              	.LFB9:
 553:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     void ADC_SAR_SEQ_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_SEQ_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 524              		.loc 1 594 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL30:
 595:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_SEQ_RANGE_LOW_MASK);
 530              		.loc 1 595 0
 531 0000 054A     		ldr	r2, .L42
 532 0002 1368     		ldr	r3, [r2]
 533 0004 1B0C     		lsrs	r3, r3, #16
 534 0006 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 21


 535 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_SEQ_RANGE_LOW_MASK;
 536              		.loc 1 596 0
 537 000a 1368     		ldr	r3, [r2]
 538 000c 0004     		lsls	r0, r0, #16
 539              	.LVL31:
 540 000e 000C     		lsrs	r0, r0, #16
 541 0010 1843     		orrs	r0, r3
 542 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 543              		.loc 1 597 0
 544              		@ sp needed
 545 0014 7047     		bx	lr
 546              	.L43:
 547 0016 C046     		.align	2
 548              	.L42:
 549 0018 18001A40 		.word	1075445784
 550              		.cfi_endproc
 551              	.LFE9:
 552              		.size	ADC_SAR_SEQ_SetLowLimit, .-ADC_SAR_SEQ_SetLowLimit
 553              		.section	.text.ADC_SAR_SEQ_SetHighLimit,"ax",%progbits
 554              		.align	2
 555              		.global	ADC_SAR_SEQ_SetHighLimit
 556              		.code	16
 557              		.thumb_func
 558              		.type	ADC_SAR_SEQ_SetHighLimit, %function
 559              	ADC_SAR_SEQ_SetHighLimit:
 560              	.LFB10:
 598:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 561              		.loc 1 615 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566              	.LVL32:
 616:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_SEQ_RANGE_HIGH_MASK);
 567              		.loc 1 616 0
 568 0000 044A     		ldr	r2, .L45
 569 0002 1368     		ldr	r3, [r2]
 570 0004 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 22


 571 0006 1B0C     		lsrs	r3, r3, #16
 572 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_SEQ_RANGE_HIGH_OFFSET);
 573              		.loc 1 617 0
 574 000a 1368     		ldr	r3, [r2]
 575 000c 0004     		lsls	r0, r0, #16
 576              	.LVL33:
 577 000e 1843     		orrs	r0, r3
 578 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 579              		.loc 1 618 0
 580              		@ sp needed
 581 0012 7047     		bx	lr
 582              	.L46:
 583              		.align	2
 584              	.L45:
 585 0014 18001A40 		.word	1075445784
 586              		.cfi_endproc
 587              	.LFE10:
 588              		.size	ADC_SAR_SEQ_SetHighLimit, .-ADC_SAR_SEQ_SetHighLimit
 589              		.section	.text.ADC_SAR_SEQ_SetLimitMask,"ax",%progbits
 590              		.align	2
 591              		.global	ADC_SAR_SEQ_SetLimitMask
 592              		.code	16
 593              		.thumb_func
 594              		.type	ADC_SAR_SEQ_SetLimitMask, %function
 595              	ADC_SAR_SEQ_SetLimitMask:
 596              	.LFB11:
 619:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 597              		.loc 1 639 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 602              	.LVL34:
 640:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 603              		.loc 1 640 0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 23


 604 0000 0123     		movs	r3, #1
 605 0002 1840     		ands	r0, r3
 606              	.LVL35:
 607 0004 014B     		ldr	r3, .L48
 608 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 609              		.loc 1 641 0
 610              		@ sp needed
 611 0008 7047     		bx	lr
 612              	.L49:
 613 000a C046     		.align	2
 614              	.L48:
 615 000c 38021A40 		.word	1075446328
 616              		.cfi_endproc
 617              	.LFE11:
 618              		.size	ADC_SAR_SEQ_SetLimitMask, .-ADC_SAR_SEQ_SetLimitMask
 619              		.section	.text.ADC_SAR_SEQ_SetSatMask,"ax",%progbits
 620              		.align	2
 621              		.global	ADC_SAR_SEQ_SetSatMask
 622              		.code	16
 623              		.thumb_func
 624              		.type	ADC_SAR_SEQ_SetSatMask, %function
 625              	ADC_SAR_SEQ_SetSatMask:
 626              	.LFB12:
 642:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 627              		.loc 1 662 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632              	.LVL36:
 663:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 633              		.loc 1 663 0
 634 0000 0123     		movs	r3, #1
 635 0002 1840     		ands	r0, r3
 636              	.LVL37:
 637 0004 014B     		ldr	r3, .L51
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 24


 638 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 639              		.loc 1 664 0
 640              		@ sp needed
 641 0008 7047     		bx	lr
 642              	.L52:
 643 000a C046     		.align	2
 644              	.L51:
 645 000c 28021A40 		.word	1075446312
 646              		.cfi_endproc
 647              	.LFE12:
 648              		.size	ADC_SAR_SEQ_SetSatMask, .-ADC_SAR_SEQ_SetSatMask
 649              		.section	.text.ADC_SAR_SEQ_SetOffset,"ax",%progbits
 650              		.align	2
 651              		.global	ADC_SAR_SEQ_SetOffset
 652              		.code	16
 653              		.thumb_func
 654              		.type	ADC_SAR_SEQ_SetOffset, %function
 655              	ADC_SAR_SEQ_SetOffset:
 656              	.LFB13:
 665:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 657              		.loc 1 690 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LVL38:
 662 0000 70B5     		push	{r4, r5, r6, lr}
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 4, -16
 665              		.cfi_offset 5, -12
 666              		.cfi_offset 6, -8
 667              		.cfi_offset 14, -4
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 25


 668 0002 0400     		movs	r4, r0
 669 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 670              		.loc 1 692 0
 671 0006 0028     		cmp	r0, #0
 672 0008 02D0     		beq	.L54
 673              		.loc 1 692 0 is_stmt 0 discriminator 1
 674 000a 0020     		movs	r0, #0
 675              	.LVL39:
 676 000c FFF7FEFF 		bl	CyHalt
 677              	.LVL40:
 678              	.L54:
 693:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_offset[chan] = offset;
 679              		.loc 1 694 0 is_stmt 1
 680 0010 6400     		lsls	r4, r4, #1
 681              	.LVL41:
 682 0012 014B     		ldr	r3, .L55
 683 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 684              		.loc 1 695 0
 685              		@ sp needed
 686 0016 70BD     		pop	{r4, r5, r6, pc}
 687              	.L56:
 688              		.align	2
 689              	.L55:
 690 0018 00000000 		.word	ADC_SAR_SEQ_offset
 691              		.cfi_endproc
 692              	.LFE13:
 693              		.size	ADC_SAR_SEQ_SetOffset, .-ADC_SAR_SEQ_SetOffset
 694              		.section	.text.ADC_SAR_SEQ_SetGain,"ax",%progbits
 695              		.align	2
 696              		.global	ADC_SAR_SEQ_SetGain
 697              		.code	16
 698              		.thumb_func
 699              		.type	ADC_SAR_SEQ_SetGain, %function
 700              	ADC_SAR_SEQ_SetGain:
 701              	.LFB14:
 696:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  adcGain: ADC gain in counts per 10 volts.
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 26


 714:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 702              		.loc 1 724 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              	.LVL42:
 707 0000 70B5     		push	{r4, r5, r6, lr}
 708              		.cfi_def_cfa_offset 16
 709              		.cfi_offset 4, -16
 710              		.cfi_offset 5, -12
 711              		.cfi_offset 6, -8
 712              		.cfi_offset 14, -4
 713 0002 0400     		movs	r4, r0
 714 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 715              		.loc 1 726 0
 716 0006 0028     		cmp	r0, #0
 717 0008 02D0     		beq	.L58
 718              		.loc 1 726 0 is_stmt 0 discriminator 1
 719 000a 0020     		movs	r0, #0
 720              	.LVL43:
 721 000c FFF7FEFF 		bl	CyHalt
 722              	.LVL44:
 723              	.L58:
 727:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_countsPer10Volt[chan] = adcGain;
 724              		.loc 1 728 0 is_stmt 1
 725 0010 A400     		lsls	r4, r4, #2
 726              	.LVL45:
 727 0012 014B     		ldr	r3, .L59
 728 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 729              		.loc 1 729 0
 730              		@ sp needed
 731              	.LVL46:
 732 0016 70BD     		pop	{r4, r5, r6, pc}
 733              	.L60:
 734              		.align	2
 735              	.L59:
 736 0018 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 737              		.cfi_endproc
 738              	.LFE14:
 739              		.size	ADC_SAR_SEQ_SetGain, .-ADC_SAR_SEQ_SetGain
 740              		.global	__aeabi_idiv
 741              		.section	.text.ADC_SAR_SEQ_CountsTo_mVolts,"ax",%progbits
 742              		.align	2
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 27


 743              		.global	ADC_SAR_SEQ_CountsTo_mVolts
 744              		.code	16
 745              		.thumb_func
 746              		.type	ADC_SAR_SEQ_CountsTo_mVolts, %function
 747              	ADC_SAR_SEQ_CountsTo_mVolts:
 748              	.LFB15:
 730:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #if(ADC_SAR_SEQ_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_SEQ__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int16 ADC_SAR_SEQ_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 749              		.loc 1 757 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL47:
 754 0000 70B5     		push	{r4, r5, r6, lr}
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 4, -16
 757              		.cfi_offset 5, -12
 758              		.cfi_offset 6, -8
 759              		.cfi_offset 14, -4
 760 0002 0400     		movs	r4, r0
 761 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 762              		.loc 1 761 0
 763 0006 0028     		cmp	r0, #0
 764 0008 02D0     		beq	.L62
 765              		.loc 1 761 0 is_stmt 0 discriminator 1
 766 000a 0020     		movs	r0, #0
 767              	.LVL48:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 28


 768 000c FFF7FEFF 		bl	CyHalt
 769              	.LVL49:
 770              	.L62:
 762:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 771              		.loc 1 772 0 is_stmt 1
 772 0010 6300     		lsls	r3, r4, #1
 773 0012 0F4A     		ldr	r2, .L65
 774 0014 995A     		ldrh	r1, [r3, r2]
 775 0016 09B2     		sxth	r1, r1
 776 0018 691A     		subs	r1, r5, r1
 777 001a 09B2     		sxth	r1, r1
 778              	.LVL50:
 773:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_SEQ_10MV_COUNTS) + ( (adcCounts > 0) ?
 779              		.loc 1 774 0
 780 001c 0D48     		ldr	r0, .L65+4
 781 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (ADC_SAR_SEQ_countsPer10Volt[chan] / 2) : (-(ADC_SAR_SEQ_countsPer10Volt[chan] / 2
 782              		.loc 1 775 0
 783 0020 0029     		cmp	r1, #0
 784 0022 06DD     		ble	.L63
 785              		.loc 1 775 0 is_stmt 0 discriminator 1
 786 0024 A300     		lsls	r3, r4, #2
 787 0026 0C4A     		ldr	r2, .L65+8
 788 0028 9A58     		ldr	r2, [r3, r2]
 789 002a D30F     		lsrs	r3, r2, #31
 790 002c 9A18     		adds	r2, r3, r2
 791 002e 5310     		asrs	r3, r2, #1
 792 0030 06E0     		b	.L64
 793              	.L63:
 794              		.loc 1 775 0 discriminator 2
 795 0032 A300     		lsls	r3, r4, #2
 796 0034 084A     		ldr	r2, .L65+8
 797 0036 9A58     		ldr	r2, [r3, r2]
 798 0038 D30F     		lsrs	r3, r2, #31
 799 003a 9A18     		adds	r2, r3, r2
 800 003c 5210     		asrs	r2, r2, #1
 801 003e 5342     		rsbs	r3, r2, #0
 802              	.L64:
 774:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (ADC_SAR_SEQ_countsPer10Volt[chan] / 2) : (-(ADC_SAR_SEQ_countsPer10Volt[chan] / 2
 803              		.loc 1 774 0 is_stmt 1
 804 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  / ADC_SAR_SEQ_countsPer10Volt[chan]);
 805              		.loc 1 776 0
 806 0042 A400     		lsls	r4, r4, #2
 807              	.LVL51:
 808 0044 044B     		ldr	r3, .L65+8
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 29


 809 0046 E158     		ldr	r1, [r4, r3]
 810              	.LVL52:
 811 0048 FFF7FEFF 		bl	__aeabi_idiv
 812              	.LVL53:
 774:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (ADC_SAR_SEQ_countsPer10Volt[chan] / 2) : (-(ADC_SAR_SEQ_countsPer10Volt[chan] / 2
 813              		.loc 1 774 0
 814 004c 00B2     		sxth	r0, r0
 815              	.LVL54:
 777:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 816              		.loc 1 779 0
 817              		@ sp needed
 818 004e 70BD     		pop	{r4, r5, r6, pc}
 819              	.L66:
 820              		.align	2
 821              	.L65:
 822 0050 00000000 		.word	ADC_SAR_SEQ_offset
 823 0054 10270000 		.word	10000
 824 0058 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 825              		.cfi_endproc
 826              	.LFE15:
 827              		.size	ADC_SAR_SEQ_CountsTo_mVolts, .-ADC_SAR_SEQ_CountsTo_mVolts
 828              		.global	__aeabi_lmul
 829              		.global	__aeabi_ldivmod
 830              		.section	.text.ADC_SAR_SEQ_CountsTo_uVolts,"ax",%progbits
 831              		.align	2
 832              		.global	ADC_SAR_SEQ_CountsTo_uVolts
 833              		.code	16
 834              		.thumb_func
 835              		.type	ADC_SAR_SEQ_CountsTo_uVolts, %function
 836              	ADC_SAR_SEQ_CountsTo_uVolts:
 837              	.LFB16:
 780:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 30


 804:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int32 ADC_SAR_SEQ_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 838              		.loc 1 811 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              	.LVL55:
 843 0000 70B5     		push	{r4, r5, r6, lr}
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 849 0002 0500     		movs	r5, r0
 850 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 851              		.loc 1 815 0
 852 0006 0028     		cmp	r0, #0
 853 0008 02D0     		beq	.L68
 854              		.loc 1 815 0 is_stmt 0 discriminator 1
 855 000a 0020     		movs	r0, #0
 856              	.LVL56:
 857 000c FFF7FEFF 		bl	CyHalt
 858              	.LVL57:
 859              	.L68:
 816:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 860              		.loc 1 826 0 is_stmt 1
 861 0010 6A00     		lsls	r2, r5, #1
 862 0012 084B     		ldr	r3, .L69
 863 0014 D05A     		ldrh	r0, [r2, r3]
 864 0016 00B2     		sxth	r0, r0
 865 0018 201A     		subs	r0, r4, r0
 866 001a 00B2     		sxth	r0, r0
 867              	.LVL58:
 827:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         uVolts = ((int64)adcCounts * ADC_SAR_SEQ_10UV_COUNTS) / ADC_SAR_SEQ_countsPer10Volt[chan];
 868              		.loc 1 828 0
 869 001c C117     		asrs	r1, r0, #31
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 31


 870 001e 064A     		ldr	r2, .L69+4
 871 0020 0023     		movs	r3, #0
 872 0022 FFF7FEFF 		bl	__aeabi_lmul
 873              	.LVL59:
 874 0026 AD00     		lsls	r5, r5, #2
 875              	.LVL60:
 876 0028 044B     		ldr	r3, .L69+8
 877 002a EA58     		ldr	r2, [r5, r3]
 878 002c D317     		asrs	r3, r2, #31
 879 002e FFF7FEFF 		bl	__aeabi_ldivmod
 880              	.LVL61:
 829:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 881              		.loc 1 831 0
 882              		@ sp needed
 883 0032 70BD     		pop	{r4, r5, r6, pc}
 884              	.L70:
 885              		.align	2
 886              	.L69:
 887 0034 00000000 		.word	ADC_SAR_SEQ_offset
 888 0038 80969800 		.word	10000000
 889 003c 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 890              		.cfi_endproc
 891              	.LFE16:
 892              		.size	ADC_SAR_SEQ_CountsTo_uVolts, .-ADC_SAR_SEQ_CountsTo_uVolts
 893              		.global	__aeabi_i2f
 894              		.global	__aeabi_fmul
 895              		.global	__aeabi_fdiv
 896              		.section	.text.ADC_SAR_SEQ_CountsTo_Volts,"ax",%progbits
 897              		.align	2
 898              		.global	ADC_SAR_SEQ_CountsTo_Volts
 899              		.code	16
 900              		.thumb_func
 901              		.type	ADC_SAR_SEQ_CountsTo_Volts, %function
 902              	ADC_SAR_SEQ_CountsTo_Volts:
 903              	.LFB17:
 832:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 32


 852:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     float32 ADC_SAR_SEQ_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 904              		.loc 1 856 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL62:
 909 0000 70B5     		push	{r4, r5, r6, lr}
 910              		.cfi_def_cfa_offset 16
 911              		.cfi_offset 4, -16
 912              		.cfi_offset 5, -12
 913              		.cfi_offset 6, -8
 914              		.cfi_offset 14, -4
 915 0002 0400     		movs	r4, r0
 916 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 917              		.loc 1 860 0
 918 0006 0028     		cmp	r0, #0
 919 0008 02D0     		beq	.L72
 920              		.loc 1 860 0 is_stmt 0 discriminator 1
 921 000a 0020     		movs	r0, #0
 922              	.LVL63:
 923 000c FFF7FEFF 		bl	CyHalt
 924              	.LVL64:
 925              	.L72:
 861:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 926              		.loc 1 871 0 is_stmt 1
 927 0010 6200     		lsls	r2, r4, #1
 928 0012 0A4B     		ldr	r3, .L73
 929 0014 D05A     		ldrh	r0, [r2, r3]
 930 0016 00B2     		sxth	r0, r0
 931 0018 281A     		subs	r0, r5, r0
 932 001a 00B2     		sxth	r0, r0
 933              	.LVL65:
 872:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         volts = ((float32)adcCounts * ADC_SAR_SEQ_10V_COUNTS) / (float32)ADC_SAR_SEQ_countsPer10Vol
 934              		.loc 1 873 0
 935 001c FFF7FEFF 		bl	__aeabi_i2f
 936              	.LVL66:
 937 0020 0749     		ldr	r1, .L73+4
 938 0022 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 33


 939              	.LVL67:
 940 0026 051C     		adds	r5, r0, #0
 941 0028 A400     		lsls	r4, r4, #2
 942              	.LVL68:
 943 002a 064B     		ldr	r3, .L73+8
 944 002c E058     		ldr	r0, [r4, r3]
 945 002e FFF7FEFF 		bl	__aeabi_i2f
 946              	.LVL69:
 947 0032 011C     		adds	r1, r0, #0
 948 0034 281C     		adds	r0, r5, #0
 949 0036 FFF7FEFF 		bl	__aeabi_fdiv
 950              	.LVL70:
 874:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 951              		.loc 1 876 0
 952              		@ sp needed
 953 003a 70BD     		pop	{r4, r5, r6, pc}
 954              	.L74:
 955              		.align	2
 956              	.L73:
 957 003c 00000000 		.word	ADC_SAR_SEQ_offset
 958 0040 00002041 		.word	1092616192
 959 0044 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 960              		.cfi_endproc
 961              	.LFE17:
 962              		.size	ADC_SAR_SEQ_CountsTo_Volts, .-ADC_SAR_SEQ_CountsTo_Volts
 963              		.comm	ADC_SAR_SEQ_countsPer10Volt,4,4
 964              		.comm	ADC_SAR_SEQ_offset,2,4
 965              		.global	ADC_SAR_SEQ_initVar
 966              		.bss
 967              		.set	.LANCHOR0,. + 0
 968              		.type	ADC_SAR_SEQ_initVar, %object
 969              		.size	ADC_SAR_SEQ_initVar, 1
 970              	ADC_SAR_SEQ_initVar:
 971 0000 00       		.space	1
 972              		.text
 973              	.Letext0:
 974              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 975              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 976              		.section	.debug_info,"",%progbits
 977              	.Ldebug_info0:
 978 0000 75050000 		.4byte	0x575
 979 0004 0400     		.2byte	0x4
 980 0006 00000000 		.4byte	.Ldebug_abbrev0
 981 000a 04       		.byte	0x4
 982 000b 01       		.uleb128 0x1
 983 000c 52000000 		.4byte	.LASF63
 984 0010 0C       		.byte	0xc
 985 0011 8E010000 		.4byte	.LASF64
 986 0015 18020000 		.4byte	.LASF65
 987 0019 00000000 		.4byte	.Ldebug_ranges0+0
 988 001d 00000000 		.4byte	0
 989 0021 00000000 		.4byte	.Ldebug_line0
 990 0025 02       		.uleb128 0x2
 991 0026 01       		.byte	0x1
 992 0027 06       		.byte	0x6
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 34


 993 0028 30010000 		.4byte	.LASF0
 994 002c 02       		.uleb128 0x2
 995 002d 01       		.byte	0x1
 996 002e 08       		.byte	0x8
 997 002f 39030000 		.4byte	.LASF1
 998 0033 02       		.uleb128 0x2
 999 0034 02       		.byte	0x2
 1000 0035 05       		.byte	0x5
 1001 0036 47030000 		.4byte	.LASF2
 1002 003a 02       		.uleb128 0x2
 1003 003b 02       		.byte	0x2
 1004 003c 07       		.byte	0x7
 1005 003d 05020000 		.4byte	.LASF3
 1006 0041 02       		.uleb128 0x2
 1007 0042 04       		.byte	0x4
 1008 0043 05       		.byte	0x5
 1009 0044 42010000 		.4byte	.LASF4
 1010 0048 02       		.uleb128 0x2
 1011 0049 04       		.byte	0x4
 1012 004a 07       		.byte	0x7
 1013 004b E3010000 		.4byte	.LASF5
 1014 004f 02       		.uleb128 0x2
 1015 0050 08       		.byte	0x8
 1016 0051 05       		.byte	0x5
 1017 0052 22010000 		.4byte	.LASF6
 1018 0056 02       		.uleb128 0x2
 1019 0057 08       		.byte	0x8
 1020 0058 07       		.byte	0x7
 1021 0059 E0000000 		.4byte	.LASF7
 1022 005d 03       		.uleb128 0x3
 1023 005e 04       		.byte	0x4
 1024 005f 05       		.byte	0x5
 1025 0060 696E7400 		.ascii	"int\000"
 1026 0064 02       		.uleb128 0x2
 1027 0065 04       		.byte	0x4
 1028 0066 07       		.byte	0x7
 1029 0067 B3010000 		.4byte	.LASF8
 1030 006b 04       		.uleb128 0x4
 1031 006c 4B010000 		.4byte	.LASF9
 1032 0070 02       		.byte	0x2
 1033 0071 E401     		.2byte	0x1e4
 1034 0073 2C000000 		.4byte	0x2c
 1035 0077 04       		.uleb128 0x4
 1036 0078 00000000 		.4byte	.LASF10
 1037 007c 02       		.byte	0x2
 1038 007d E501     		.2byte	0x1e5
 1039 007f 3A000000 		.4byte	0x3a
 1040 0083 04       		.uleb128 0x4
 1041 0084 7A010000 		.4byte	.LASF11
 1042 0088 02       		.byte	0x2
 1043 0089 E601     		.2byte	0x1e6
 1044 008b 48000000 		.4byte	0x48
 1045 008f 04       		.uleb128 0x4
 1046 0090 31040000 		.4byte	.LASF12
 1047 0094 02       		.byte	0x2
 1048 0095 E801     		.2byte	0x1e8
 1049 0097 33000000 		.4byte	0x33
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 35


 1050 009b 04       		.uleb128 0x4
 1051 009c 3C010000 		.4byte	.LASF13
 1052 00a0 02       		.byte	0x2
 1053 00a1 E901     		.2byte	0x1e9
 1054 00a3 41000000 		.4byte	0x41
 1055 00a7 04       		.uleb128 0x4
 1056 00a8 91020000 		.4byte	.LASF14
 1057 00ac 02       		.byte	0x2
 1058 00ad EA01     		.2byte	0x1ea
 1059 00af B3000000 		.4byte	0xb3
 1060 00b3 02       		.uleb128 0x2
 1061 00b4 04       		.byte	0x4
 1062 00b5 04       		.byte	0x4
 1063 00b6 09030000 		.4byte	.LASF15
 1064 00ba 02       		.uleb128 0x2
 1065 00bb 08       		.byte	0x8
 1066 00bc 04       		.byte	0x4
 1067 00bd 73010000 		.4byte	.LASF16
 1068 00c1 04       		.uleb128 0x4
 1069 00c2 CE020000 		.4byte	.LASF17
 1070 00c6 02       		.byte	0x2
 1071 00c7 EF01     		.2byte	0x1ef
 1072 00c9 4F000000 		.4byte	0x4f
 1073 00cd 02       		.uleb128 0x2
 1074 00ce 01       		.byte	0x1
 1075 00cf 08       		.byte	0x8
 1076 00d0 E3030000 		.4byte	.LASF18
 1077 00d4 04       		.uleb128 0x4
 1078 00d5 8B020000 		.4byte	.LASF19
 1079 00d9 02       		.byte	0x2
 1080 00da 9002     		.2byte	0x290
 1081 00dc E0000000 		.4byte	0xe0
 1082 00e0 05       		.uleb128 0x5
 1083 00e1 83000000 		.4byte	0x83
 1084 00e5 02       		.uleb128 0x2
 1085 00e6 08       		.byte	0x8
 1086 00e7 04       		.byte	0x4
 1087 00e8 AB020000 		.4byte	.LASF20
 1088 00ec 02       		.uleb128 0x2
 1089 00ed 04       		.byte	0x4
 1090 00ee 07       		.byte	0x7
 1091 00ef 99020000 		.4byte	.LASF21
 1092 00f3 06       		.uleb128 0x6
 1093 00f4 37040000 		.4byte	.LASF25
 1094 00f8 01       		.byte	0x1
 1095 00f9 5E       		.byte	0x5e
 1096 00fa 00000000 		.4byte	.LFB1
 1097 00fe 14010000 		.4byte	.LFE1-.LFB1
 1098 0102 01       		.uleb128 0x1
 1099 0103 9C       		.byte	0x9c
 1100 0104 5D010000 		.4byte	0x15d
 1101 0108 07       		.uleb128 0x7
 1102 0109 A9030000 		.4byte	.LASF22
 1103 010d 01       		.byte	0x1
 1104 010e 60       		.byte	0x60
 1105 010f 83000000 		.4byte	0x83
 1106 0113 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 36


 1107 0117 07       		.uleb128 0x7
 1108 0118 FB010000 		.4byte	.LASF23
 1109 011c 01       		.byte	0x1
 1110 011d 61       		.byte	0x61
 1111 011e 83000000 		.4byte	0x83
 1112 0122 1F000000 		.4byte	.LLST1
 1113 0126 07       		.uleb128 0x7
 1114 0127 0F000000 		.4byte	.LASF24
 1115 012b 01       		.byte	0x1
 1116 012c 62       		.byte	0x62
 1117 012d 9B000000 		.4byte	0x9b
 1118 0131 62000000 		.4byte	.LLST2
 1119 0135 08       		.uleb128 0x8
 1120 0136 0A000000 		.4byte	.LVL0
 1121 013a 4C050000 		.4byte	0x54c
 1122 013e 4D010000 		.4byte	0x14d
 1123 0142 09       		.uleb128 0x9
 1124 0143 01       		.uleb128 0x1
 1125 0144 50       		.byte	0x50
 1126 0145 01       		.uleb128 0x1
 1127 0146 3E       		.byte	0x3e
 1128 0147 09       		.uleb128 0x9
 1129 0148 01       		.uleb128 0x1
 1130 0149 51       		.byte	0x51
 1131 014a 01       		.uleb128 0x1
 1132 014b 33       		.byte	0x33
 1133 014c 00       		.byte	0
 1134 014d 0A       		.uleb128 0xa
 1135 014e 12000000 		.4byte	.LVL1
 1136 0152 57050000 		.4byte	0x557
 1137 0156 09       		.uleb128 0x9
 1138 0157 01       		.uleb128 0x1
 1139 0158 50       		.byte	0x50
 1140 0159 01       		.uleb128 0x1
 1141 015a 3E       		.byte	0x3e
 1142 015b 00       		.byte	0
 1143 015c 00       		.byte	0
 1144 015d 0B       		.uleb128 0xb
 1145 015e F6020000 		.4byte	.LASF26
 1146 0162 01       		.byte	0x1
 1147 0163 4A01     		.2byte	0x14a
 1148 0165 00000000 		.4byte	.LFB2
 1149 0169 24000000 		.4byte	.LFE2-.LFB2
 1150 016d 01       		.uleb128 0x1
 1151 016e 9C       		.byte	0x9c
 1152 016f 83010000 		.4byte	0x183
 1153 0173 0A       		.uleb128 0xa
 1154 0174 1C000000 		.4byte	.LVL10
 1155 0178 62050000 		.4byte	0x562
 1156 017c 09       		.uleb128 0x9
 1157 017d 01       		.uleb128 0x1
 1158 017e 50       		.byte	0x50
 1159 017f 01       		.uleb128 0x1
 1160 0180 3A       		.byte	0x3a
 1161 0181 00       		.byte	0
 1162 0182 00       		.byte	0
 1163 0183 06       		.uleb128 0x6
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 37


 1164 0184 40000000 		.4byte	.LASF27
 1165 0188 01       		.byte	0x1
 1166 0189 3F       		.byte	0x3f
 1167 018a 00000000 		.4byte	.LFB0
 1168 018e 20000000 		.4byte	.LFE0-.LFB0
 1169 0192 01       		.uleb128 0x1
 1170 0193 9C       		.byte	0x9c
 1171 0194 AB010000 		.4byte	0x1ab
 1172 0198 0C       		.uleb128 0xc
 1173 0199 0E000000 		.4byte	.LVL11
 1174 019d F3000000 		.4byte	0xf3
 1175 01a1 0C       		.uleb128 0xc
 1176 01a2 18000000 		.4byte	.LVL12
 1177 01a6 5D010000 		.4byte	0x15d
 1178 01aa 00       		.byte	0
 1179 01ab 0D       		.uleb128 0xd
 1180 01ac D4020000 		.4byte	.LASF28
 1181 01b0 01       		.byte	0x1
 1182 01b1 6D01     		.2byte	0x16d
 1183 01b3 00000000 		.4byte	.LFB3
 1184 01b7 10000000 		.4byte	.LFE3-.LFB3
 1185 01bb 01       		.uleb128 0x1
 1186 01bc 9C       		.byte	0x9c
 1187 01bd 0D       		.uleb128 0xd
 1188 01be 90030000 		.4byte	.LASF29
 1189 01c2 01       		.byte	0x1
 1190 01c3 8701     		.2byte	0x187
 1191 01c5 00000000 		.4byte	.LFB4
 1192 01c9 14000000 		.4byte	.LFE4-.LFB4
 1193 01cd 01       		.uleb128 0x1
 1194 01ce 9C       		.byte	0x9c
 1195 01cf 0D       		.uleb128 0xd
 1196 01d0 51010000 		.4byte	.LASF30
 1197 01d4 01       		.byte	0x1
 1198 01d5 A001     		.2byte	0x1a0
 1199 01d7 00000000 		.4byte	.LFB5
 1200 01db 14000000 		.4byte	.LFE5-.LFB5
 1201 01df 01       		.uleb128 0x1
 1202 01e0 9C       		.byte	0x9c
 1203 01e1 0E       		.uleb128 0xe
 1204 01e2 51030000 		.4byte	.LASF32
 1205 01e6 01       		.byte	0x1
 1206 01e7 C201     		.2byte	0x1c2
 1207 01e9 83000000 		.4byte	0x83
 1208 01ed 00000000 		.4byte	.LFB6
 1209 01f1 28000000 		.4byte	.LFE6-.LFB6
 1210 01f5 01       		.uleb128 0x1
 1211 01f6 9C       		.byte	0x9c
 1212 01f7 1C020000 		.4byte	0x21c
 1213 01fb 0F       		.uleb128 0xf
 1214 01fc 86010000 		.4byte	.LASF34
 1215 0200 01       		.byte	0x1
 1216 0201 C201     		.2byte	0x1c2
 1217 0203 83000000 		.4byte	0x83
 1218 0207 78000000 		.4byte	.LLST3
 1219 020b 10       		.uleb128 0x10
 1220 020c 2A040000 		.4byte	.LASF31
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 38


 1221 0210 01       		.byte	0x1
 1222 0211 C401     		.2byte	0x1c4
 1223 0213 83000000 		.4byte	0x83
 1224 0217 BD000000 		.4byte	.LLST4
 1225 021b 00       		.byte	0
 1226 021c 0E       		.uleb128 0xe
 1227 021d E8030000 		.4byte	.LASF33
 1228 0221 01       		.byte	0x1
 1229 0222 F801     		.2byte	0x1f8
 1230 0224 8F000000 		.4byte	0x8f
 1231 0228 00000000 		.4byte	.LFB7
 1232 022c 2C000000 		.4byte	.LFE7-.LFB7
 1233 0230 01       		.uleb128 0x1
 1234 0231 9C       		.byte	0x9c
 1235 0232 66020000 		.4byte	0x266
 1236 0236 0F       		.uleb128 0xf
 1237 0237 DE030000 		.4byte	.LASF35
 1238 023b 01       		.byte	0x1
 1239 023c F801     		.2byte	0x1f8
 1240 023e 83000000 		.4byte	0x83
 1241 0242 F3000000 		.4byte	.LLST5
 1242 0246 10       		.uleb128 0x10
 1243 0247 48040000 		.4byte	.LASF36
 1244 024b 01       		.byte	0x1
 1245 024c FA01     		.2byte	0x1fa
 1246 024e 83000000 		.4byte	0x83
 1247 0252 38010000 		.4byte	.LLST6
 1248 0256 0A       		.uleb128 0xa
 1249 0257 0C000000 		.4byte	.LVL22
 1250 025b 6D050000 		.4byte	0x56d
 1251 025f 09       		.uleb128 0x9
 1252 0260 01       		.uleb128 0x1
 1253 0261 50       		.byte	0x50
 1254 0262 01       		.uleb128 0x1
 1255 0263 30       		.byte	0x30
 1256 0264 00       		.byte	0
 1257 0265 00       		.byte	0
 1258 0266 0B       		.uleb128 0xb
 1259 0267 0A010000 		.4byte	.LASF37
 1260 026b 01       		.byte	0x1
 1261 026c 2502     		.2byte	0x225
 1262 026e 00000000 		.4byte	.LFB8
 1263 0272 10000000 		.4byte	.LFE8-.LFB8
 1264 0276 01       		.uleb128 0x1
 1265 0277 9C       		.byte	0x9c
 1266 0278 8D020000 		.4byte	0x28d
 1267 027c 0F       		.uleb128 0xf
 1268 027d 81010000 		.4byte	.LASF38
 1269 0281 01       		.byte	0x1
 1270 0282 2502     		.2byte	0x225
 1271 0284 83000000 		.4byte	0x83
 1272 0288 56010000 		.4byte	.LLST7
 1273 028c 00       		.byte	0
 1274 028d 0B       		.uleb128 0xb
 1275 028e 73020000 		.4byte	.LASF39
 1276 0292 01       		.byte	0x1
 1277 0293 5102     		.2byte	0x251
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 39


 1278 0295 00000000 		.4byte	.LFB9
 1279 0299 1C000000 		.4byte	.LFE9-.LFB9
 1280 029d 01       		.uleb128 0x1
 1281 029e 9C       		.byte	0x9c
 1282 029f B4020000 		.4byte	0x2b4
 1283 02a3 0F       		.uleb128 0xf
 1284 02a4 A2020000 		.4byte	.LASF40
 1285 02a8 01       		.byte	0x1
 1286 02a9 5102     		.2byte	0x251
 1287 02ab 83000000 		.4byte	0x83
 1288 02af 77010000 		.4byte	.LLST8
 1289 02b3 00       		.byte	0
 1290 02b4 0B       		.uleb128 0xb
 1291 02b5 07040000 		.4byte	.LASF41
 1292 02b9 01       		.byte	0x1
 1293 02ba 6602     		.2byte	0x266
 1294 02bc 00000000 		.4byte	.LFB10
 1295 02c0 18000000 		.4byte	.LFE10-.LFB10
 1296 02c4 01       		.uleb128 0x1
 1297 02c5 9C       		.byte	0x9c
 1298 02c6 DB020000 		.4byte	0x2db
 1299 02ca 0F       		.uleb128 0xf
 1300 02cb 0F030000 		.4byte	.LASF42
 1301 02cf 01       		.byte	0x1
 1302 02d0 6602     		.2byte	0x266
 1303 02d2 83000000 		.4byte	0x83
 1304 02d6 98010000 		.4byte	.LLST9
 1305 02da 00       		.byte	0
 1306 02db 0B       		.uleb128 0xb
 1307 02dc 19030000 		.4byte	.LASF43
 1308 02e0 01       		.byte	0x1
 1309 02e1 7E02     		.2byte	0x27e
 1310 02e3 00000000 		.4byte	.LFB11
 1311 02e7 10000000 		.4byte	.LFE11-.LFB11
 1312 02eb 01       		.uleb128 0x1
 1313 02ec 9C       		.byte	0x9c
 1314 02ed 02030000 		.4byte	0x302
 1315 02f1 0F       		.uleb128 0xf
 1316 02f2 81010000 		.4byte	.LASF38
 1317 02f6 01       		.byte	0x1
 1318 02f7 7E02     		.2byte	0x27e
 1319 02f9 83000000 		.4byte	0x83
 1320 02fd B9010000 		.4byte	.LLST10
 1321 0301 00       		.byte	0
 1322 0302 0B       		.uleb128 0xb
 1323 0303 B7020000 		.4byte	.LASF44
 1324 0307 01       		.byte	0x1
 1325 0308 9502     		.2byte	0x295
 1326 030a 00000000 		.4byte	.LFB12
 1327 030e 10000000 		.4byte	.LFE12-.LFB12
 1328 0312 01       		.uleb128 0x1
 1329 0313 9C       		.byte	0x9c
 1330 0314 29030000 		.4byte	0x329
 1331 0318 0F       		.uleb128 0xf
 1332 0319 81010000 		.4byte	.LASF38
 1333 031d 01       		.byte	0x1
 1334 031e 9502     		.2byte	0x295
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 40


 1335 0320 83000000 		.4byte	0x83
 1336 0324 DA010000 		.4byte	.LLST11
 1337 0328 00       		.byte	0
 1338 0329 0B       		.uleb128 0xb
 1339 032a 2A000000 		.4byte	.LASF45
 1340 032e 01       		.byte	0x1
 1341 032f B102     		.2byte	0x2b1
 1342 0331 00000000 		.4byte	.LFB13
 1343 0335 1C000000 		.4byte	.LFE13-.LFB13
 1344 0339 01       		.uleb128 0x1
 1345 033a 9C       		.byte	0x9c
 1346 033b 6F030000 		.4byte	0x36f
 1347 033f 0F       		.uleb128 0xf
 1348 0340 DE030000 		.4byte	.LASF35
 1349 0344 01       		.byte	0x1
 1350 0345 B102     		.2byte	0x2b1
 1351 0347 83000000 		.4byte	0x83
 1352 034b FB010000 		.4byte	.LLST12
 1353 034f 0F       		.uleb128 0xf
 1354 0350 00040000 		.4byte	.LASF46
 1355 0354 01       		.byte	0x1
 1356 0355 B102     		.2byte	0x2b1
 1357 0357 8F000000 		.4byte	0x8f
 1358 035b 27020000 		.4byte	.LLST13
 1359 035f 0A       		.uleb128 0xa
 1360 0360 10000000 		.4byte	.LVL40
 1361 0364 6D050000 		.4byte	0x56d
 1362 0368 09       		.uleb128 0x9
 1363 0369 01       		.uleb128 0x1
 1364 036a 50       		.byte	0x50
 1365 036b 01       		.uleb128 0x1
 1366 036c 30       		.byte	0x30
 1367 036d 00       		.byte	0
 1368 036e 00       		.byte	0
 1369 036f 0B       		.uleb128 0xb
 1370 0370 16000000 		.4byte	.LASF47
 1371 0374 01       		.byte	0x1
 1372 0375 D302     		.2byte	0x2d3
 1373 0377 00000000 		.4byte	.LFB14
 1374 037b 1C000000 		.4byte	.LFE14-.LFB14
 1375 037f 01       		.uleb128 0x1
 1376 0380 9C       		.byte	0x9c
 1377 0381 B5030000 		.4byte	0x3b5
 1378 0385 0F       		.uleb128 0xf
 1379 0386 DE030000 		.4byte	.LASF35
 1380 038a 01       		.byte	0x1
 1381 038b D302     		.2byte	0x2d3
 1382 038d 83000000 		.4byte	0x83
 1383 0391 48020000 		.4byte	.LLST14
 1384 0395 0F       		.uleb128 0xf
 1385 0396 07000000 		.4byte	.LASF48
 1386 039a 01       		.byte	0x1
 1387 039b D302     		.2byte	0x2d3
 1388 039d 9B000000 		.4byte	0x9b
 1389 03a1 74020000 		.4byte	.LLST15
 1390 03a5 0A       		.uleb128 0xa
 1391 03a6 10000000 		.4byte	.LVL44
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 41


 1392 03aa 6D050000 		.4byte	0x56d
 1393 03ae 09       		.uleb128 0x9
 1394 03af 01       		.uleb128 0x1
 1395 03b0 50       		.byte	0x50
 1396 03b1 01       		.uleb128 0x1
 1397 03b2 30       		.byte	0x30
 1398 03b3 00       		.byte	0
 1399 03b4 00       		.byte	0
 1400 03b5 11       		.uleb128 0x11
 1401 03b6 57020000 		.4byte	.LASF49
 1402 03ba 01       		.byte	0x1
 1403 03bb F402     		.2byte	0x2f4
 1404 03bd 8F000000 		.4byte	0x8f
 1405 03c1 00000000 		.4byte	.LFB15
 1406 03c5 5C000000 		.4byte	.LFE15-.LFB15
 1407 03c9 01       		.uleb128 0x1
 1408 03ca 9C       		.byte	0x9c
 1409 03cb 0D040000 		.4byte	0x40d
 1410 03cf 0F       		.uleb128 0xf
 1411 03d0 DE030000 		.4byte	.LASF35
 1412 03d4 01       		.byte	0x1
 1413 03d5 F402     		.2byte	0x2f4
 1414 03d7 83000000 		.4byte	0x83
 1415 03db A4020000 		.4byte	.LLST16
 1416 03df 0F       		.uleb128 0xf
 1417 03e0 20040000 		.4byte	.LASF50
 1418 03e4 01       		.byte	0x1
 1419 03e5 F402     		.2byte	0x2f4
 1420 03e7 8F000000 		.4byte	0x8f
 1421 03eb D0020000 		.4byte	.LLST17
 1422 03ef 12       		.uleb128 0x12
 1423 03f0 6D030000 		.4byte	.LASF51
 1424 03f4 01       		.byte	0x1
 1425 03f5 F602     		.2byte	0x2f6
 1426 03f7 8F000000 		.4byte	0x8f
 1427 03fb 01       		.uleb128 0x1
 1428 03fc 50       		.byte	0x50
 1429 03fd 0A       		.uleb128 0xa
 1430 03fe 10000000 		.4byte	.LVL49
 1431 0402 6D050000 		.4byte	0x56d
 1432 0406 09       		.uleb128 0x9
 1433 0407 01       		.uleb128 0x1
 1434 0408 50       		.byte	0x50
 1435 0409 01       		.uleb128 0x1
 1436 040a 30       		.byte	0x30
 1437 040b 00       		.byte	0
 1438 040c 00       		.byte	0
 1439 040d 11       		.uleb128 0x11
 1440 040e C0010000 		.4byte	.LASF52
 1441 0412 01       		.byte	0x1
 1442 0413 2A03     		.2byte	0x32a
 1443 0415 9B000000 		.4byte	0x9b
 1444 0419 00000000 		.4byte	.LFB16
 1445 041d 40000000 		.4byte	.LFE16-.LFB16
 1446 0421 01       		.uleb128 0x1
 1447 0422 9C       		.byte	0x9c
 1448 0423 63040000 		.4byte	0x463
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 42


 1449 0427 0F       		.uleb128 0xf
 1450 0428 DE030000 		.4byte	.LASF35
 1451 042c 01       		.byte	0x1
 1452 042d 2A03     		.2byte	0x32a
 1453 042f 83000000 		.4byte	0x83
 1454 0433 FC020000 		.4byte	.LLST18
 1455 0437 0F       		.uleb128 0xf
 1456 0438 20040000 		.4byte	.LASF50
 1457 043c 01       		.byte	0x1
 1458 043d 2A03     		.2byte	0x32a
 1459 043f 8F000000 		.4byte	0x8f
 1460 0443 28030000 		.4byte	.LLST19
 1461 0447 13       		.uleb128 0x13
 1462 0448 DC010000 		.4byte	.LASF66
 1463 044c 01       		.byte	0x1
 1464 044d 2C03     		.2byte	0x32c
 1465 044f C1000000 		.4byte	0xc1
 1466 0453 0A       		.uleb128 0xa
 1467 0454 10000000 		.4byte	.LVL57
 1468 0458 6D050000 		.4byte	0x56d
 1469 045c 09       		.uleb128 0x9
 1470 045d 01       		.uleb128 0x1
 1471 045e 50       		.byte	0x50
 1472 045f 01       		.uleb128 0x1
 1473 0460 30       		.byte	0x30
 1474 0461 00       		.byte	0
 1475 0462 00       		.byte	0
 1476 0463 11       		.uleb128 0x11
 1477 0464 4F040000 		.4byte	.LASF53
 1478 0468 01       		.byte	0x1
 1479 0469 5703     		.2byte	0x357
 1480 046b A7000000 		.4byte	0xa7
 1481 046f 00000000 		.4byte	.LFB17
 1482 0473 48000000 		.4byte	.LFE17-.LFB17
 1483 0477 01       		.uleb128 0x1
 1484 0478 9C       		.byte	0x9c
 1485 0479 BB040000 		.4byte	0x4bb
 1486 047d 0F       		.uleb128 0xf
 1487 047e DE030000 		.4byte	.LASF35
 1488 0482 01       		.byte	0x1
 1489 0483 5703     		.2byte	0x357
 1490 0485 83000000 		.4byte	0x83
 1491 0489 54030000 		.4byte	.LLST20
 1492 048d 0F       		.uleb128 0xf
 1493 048e 20040000 		.4byte	.LASF50
 1494 0492 01       		.byte	0x1
 1495 0493 5703     		.2byte	0x357
 1496 0495 8F000000 		.4byte	0x8f
 1497 0499 80030000 		.4byte	.LLST21
 1498 049d 12       		.uleb128 0x12
 1499 049e F5010000 		.4byte	.LASF54
 1500 04a2 01       		.byte	0x1
 1501 04a3 5903     		.2byte	0x359
 1502 04a5 A7000000 		.4byte	0xa7
 1503 04a9 01       		.uleb128 0x1
 1504 04aa 50       		.byte	0x50
 1505 04ab 0A       		.uleb128 0xa
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 43


 1506 04ac 10000000 		.4byte	.LVL64
 1507 04b0 6D050000 		.4byte	0x56d
 1508 04b4 09       		.uleb128 0x9
 1509 04b5 01       		.uleb128 0x1
 1510 04b6 50       		.byte	0x50
 1511 04b7 01       		.uleb128 0x1
 1512 04b8 30       		.byte	0x30
 1513 04b9 00       		.byte	0
 1514 04ba 00       		.byte	0
 1515 04bb 14       		.uleb128 0x14
 1516 04bc CB040000 		.4byte	0x4cb
 1517 04c0 CB040000 		.4byte	0x4cb
 1518 04c4 15       		.uleb128 0x15
 1519 04c5 EC000000 		.4byte	0xec
 1520 04c9 00       		.byte	0
 1521 04ca 00       		.byte	0
 1522 04cb 16       		.uleb128 0x16
 1523 04cc 83000000 		.4byte	0x83
 1524 04d0 17       		.uleb128 0x17
 1525 04d1 AF030000 		.4byte	.LASF55
 1526 04d5 01       		.byte	0x1
 1527 04d6 21       		.byte	0x21
 1528 04d7 E0040000 		.4byte	0x4e0
 1529 04db 04       		.byte	0x4
 1530 04dc 02       		.byte	0x2
 1531 04dd 04       		.byte	0x4
 1532 04de 00       		.byte	0
 1533 04df 00       		.byte	0
 1534 04e0 16       		.uleb128 0x16
 1535 04e1 BB040000 		.4byte	0x4bb
 1536 04e5 18       		.uleb128 0x18
 1537 04e6 CA030000 		.4byte	.LASF56
 1538 04ea 01       		.byte	0x1
 1539 04eb 18       		.byte	0x18
 1540 04ec 6B000000 		.4byte	0x6b
 1541 04f0 05       		.uleb128 0x5
 1542 04f1 03       		.byte	0x3
 1543 04f2 00000000 		.4byte	ADC_SAR_SEQ_initVar
 1544 04f6 14       		.uleb128 0x14
 1545 04f7 06050000 		.4byte	0x506
 1546 04fb 06050000 		.4byte	0x506
 1547 04ff 15       		.uleb128 0x15
 1548 0500 EC000000 		.4byte	0xec
 1549 0504 00       		.byte	0
 1550 0505 00       		.byte	0
 1551 0506 05       		.uleb128 0x5
 1552 0507 8F000000 		.4byte	0x8f
 1553 050b 18       		.uleb128 0x18
 1554 050c F7000000 		.4byte	.LASF57
 1555 0510 01       		.byte	0x1
 1556 0511 19       		.byte	0x19
 1557 0512 1C050000 		.4byte	0x51c
 1558 0516 05       		.uleb128 0x5
 1559 0517 03       		.byte	0x3
 1560 0518 00000000 		.4byte	ADC_SAR_SEQ_offset
 1561 051c 05       		.uleb128 0x5
 1562 051d F6040000 		.4byte	0x4f6
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 44


 1563 0521 14       		.uleb128 0x14
 1564 0522 31050000 		.4byte	0x531
 1565 0526 31050000 		.4byte	0x531
 1566 052a 15       		.uleb128 0x15
 1567 052b EC000000 		.4byte	0xec
 1568 052f 00       		.byte	0
 1569 0530 00       		.byte	0
 1570 0531 05       		.uleb128 0x5
 1571 0532 9B000000 		.4byte	0x9b
 1572 0536 18       		.uleb128 0x18
 1573 0537 74030000 		.4byte	.LASF58
 1574 053b 01       		.byte	0x1
 1575 053c 1A       		.byte	0x1a
 1576 053d 47050000 		.4byte	0x547
 1577 0541 05       		.uleb128 0x5
 1578 0542 03       		.byte	0x3
 1579 0543 00000000 		.4byte	ADC_SAR_SEQ_countsPer10Volt
 1580 0547 05       		.uleb128 0x5
 1581 0548 21050000 		.4byte	0x521
 1582 054c 19       		.uleb128 0x19
 1583 054d E5020000 		.4byte	.LASF59
 1584 0551 E5020000 		.4byte	.LASF59
 1585 0555 03       		.byte	0x3
 1586 0556 C0       		.byte	0xc0
 1587 0557 19       		.uleb128 0x19
 1588 0558 48020000 		.4byte	.LASF60
 1589 055c 48020000 		.4byte	.LASF60
 1590 0560 03       		.byte	0x3
 1591 0561 BD       		.byte	0xbd
 1592 0562 19       		.uleb128 0x19
 1593 0563 69010000 		.4byte	.LASF61
 1594 0567 69010000 		.4byte	.LASF61
 1595 056b 03       		.byte	0x3
 1596 056c DA       		.byte	0xda
 1597 056d 19       		.uleb128 0x19
 1598 056e 32030000 		.4byte	.LASF62
 1599 0572 32030000 		.4byte	.LASF62
 1600 0576 03       		.byte	0x3
 1601 0577 E7       		.byte	0xe7
 1602 0578 00       		.byte	0
 1603              		.section	.debug_abbrev,"",%progbits
 1604              	.Ldebug_abbrev0:
 1605 0000 01       		.uleb128 0x1
 1606 0001 11       		.uleb128 0x11
 1607 0002 01       		.byte	0x1
 1608 0003 25       		.uleb128 0x25
 1609 0004 0E       		.uleb128 0xe
 1610 0005 13       		.uleb128 0x13
 1611 0006 0B       		.uleb128 0xb
 1612 0007 03       		.uleb128 0x3
 1613 0008 0E       		.uleb128 0xe
 1614 0009 1B       		.uleb128 0x1b
 1615 000a 0E       		.uleb128 0xe
 1616 000b 55       		.uleb128 0x55
 1617 000c 17       		.uleb128 0x17
 1618 000d 11       		.uleb128 0x11
 1619 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 45


 1620 000f 10       		.uleb128 0x10
 1621 0010 17       		.uleb128 0x17
 1622 0011 00       		.byte	0
 1623 0012 00       		.byte	0
 1624 0013 02       		.uleb128 0x2
 1625 0014 24       		.uleb128 0x24
 1626 0015 00       		.byte	0
 1627 0016 0B       		.uleb128 0xb
 1628 0017 0B       		.uleb128 0xb
 1629 0018 3E       		.uleb128 0x3e
 1630 0019 0B       		.uleb128 0xb
 1631 001a 03       		.uleb128 0x3
 1632 001b 0E       		.uleb128 0xe
 1633 001c 00       		.byte	0
 1634 001d 00       		.byte	0
 1635 001e 03       		.uleb128 0x3
 1636 001f 24       		.uleb128 0x24
 1637 0020 00       		.byte	0
 1638 0021 0B       		.uleb128 0xb
 1639 0022 0B       		.uleb128 0xb
 1640 0023 3E       		.uleb128 0x3e
 1641 0024 0B       		.uleb128 0xb
 1642 0025 03       		.uleb128 0x3
 1643 0026 08       		.uleb128 0x8
 1644 0027 00       		.byte	0
 1645 0028 00       		.byte	0
 1646 0029 04       		.uleb128 0x4
 1647 002a 16       		.uleb128 0x16
 1648 002b 00       		.byte	0
 1649 002c 03       		.uleb128 0x3
 1650 002d 0E       		.uleb128 0xe
 1651 002e 3A       		.uleb128 0x3a
 1652 002f 0B       		.uleb128 0xb
 1653 0030 3B       		.uleb128 0x3b
 1654 0031 05       		.uleb128 0x5
 1655 0032 49       		.uleb128 0x49
 1656 0033 13       		.uleb128 0x13
 1657 0034 00       		.byte	0
 1658 0035 00       		.byte	0
 1659 0036 05       		.uleb128 0x5
 1660 0037 35       		.uleb128 0x35
 1661 0038 00       		.byte	0
 1662 0039 49       		.uleb128 0x49
 1663 003a 13       		.uleb128 0x13
 1664 003b 00       		.byte	0
 1665 003c 00       		.byte	0
 1666 003d 06       		.uleb128 0x6
 1667 003e 2E       		.uleb128 0x2e
 1668 003f 01       		.byte	0x1
 1669 0040 3F       		.uleb128 0x3f
 1670 0041 19       		.uleb128 0x19
 1671 0042 03       		.uleb128 0x3
 1672 0043 0E       		.uleb128 0xe
 1673 0044 3A       		.uleb128 0x3a
 1674 0045 0B       		.uleb128 0xb
 1675 0046 3B       		.uleb128 0x3b
 1676 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 46


 1677 0048 27       		.uleb128 0x27
 1678 0049 19       		.uleb128 0x19
 1679 004a 11       		.uleb128 0x11
 1680 004b 01       		.uleb128 0x1
 1681 004c 12       		.uleb128 0x12
 1682 004d 06       		.uleb128 0x6
 1683 004e 40       		.uleb128 0x40
 1684 004f 18       		.uleb128 0x18
 1685 0050 9742     		.uleb128 0x2117
 1686 0052 19       		.uleb128 0x19
 1687 0053 01       		.uleb128 0x1
 1688 0054 13       		.uleb128 0x13
 1689 0055 00       		.byte	0
 1690 0056 00       		.byte	0
 1691 0057 07       		.uleb128 0x7
 1692 0058 34       		.uleb128 0x34
 1693 0059 00       		.byte	0
 1694 005a 03       		.uleb128 0x3
 1695 005b 0E       		.uleb128 0xe
 1696 005c 3A       		.uleb128 0x3a
 1697 005d 0B       		.uleb128 0xb
 1698 005e 3B       		.uleb128 0x3b
 1699 005f 0B       		.uleb128 0xb
 1700 0060 49       		.uleb128 0x49
 1701 0061 13       		.uleb128 0x13
 1702 0062 02       		.uleb128 0x2
 1703 0063 17       		.uleb128 0x17
 1704 0064 00       		.byte	0
 1705 0065 00       		.byte	0
 1706 0066 08       		.uleb128 0x8
 1707 0067 898201   		.uleb128 0x4109
 1708 006a 01       		.byte	0x1
 1709 006b 11       		.uleb128 0x11
 1710 006c 01       		.uleb128 0x1
 1711 006d 31       		.uleb128 0x31
 1712 006e 13       		.uleb128 0x13
 1713 006f 01       		.uleb128 0x1
 1714 0070 13       		.uleb128 0x13
 1715 0071 00       		.byte	0
 1716 0072 00       		.byte	0
 1717 0073 09       		.uleb128 0x9
 1718 0074 8A8201   		.uleb128 0x410a
 1719 0077 00       		.byte	0
 1720 0078 02       		.uleb128 0x2
 1721 0079 18       		.uleb128 0x18
 1722 007a 9142     		.uleb128 0x2111
 1723 007c 18       		.uleb128 0x18
 1724 007d 00       		.byte	0
 1725 007e 00       		.byte	0
 1726 007f 0A       		.uleb128 0xa
 1727 0080 898201   		.uleb128 0x4109
 1728 0083 01       		.byte	0x1
 1729 0084 11       		.uleb128 0x11
 1730 0085 01       		.uleb128 0x1
 1731 0086 31       		.uleb128 0x31
 1732 0087 13       		.uleb128 0x13
 1733 0088 00       		.byte	0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 47


 1734 0089 00       		.byte	0
 1735 008a 0B       		.uleb128 0xb
 1736 008b 2E       		.uleb128 0x2e
 1737 008c 01       		.byte	0x1
 1738 008d 3F       		.uleb128 0x3f
 1739 008e 19       		.uleb128 0x19
 1740 008f 03       		.uleb128 0x3
 1741 0090 0E       		.uleb128 0xe
 1742 0091 3A       		.uleb128 0x3a
 1743 0092 0B       		.uleb128 0xb
 1744 0093 3B       		.uleb128 0x3b
 1745 0094 05       		.uleb128 0x5
 1746 0095 27       		.uleb128 0x27
 1747 0096 19       		.uleb128 0x19
 1748 0097 11       		.uleb128 0x11
 1749 0098 01       		.uleb128 0x1
 1750 0099 12       		.uleb128 0x12
 1751 009a 06       		.uleb128 0x6
 1752 009b 40       		.uleb128 0x40
 1753 009c 18       		.uleb128 0x18
 1754 009d 9742     		.uleb128 0x2117
 1755 009f 19       		.uleb128 0x19
 1756 00a0 01       		.uleb128 0x1
 1757 00a1 13       		.uleb128 0x13
 1758 00a2 00       		.byte	0
 1759 00a3 00       		.byte	0
 1760 00a4 0C       		.uleb128 0xc
 1761 00a5 898201   		.uleb128 0x4109
 1762 00a8 00       		.byte	0
 1763 00a9 11       		.uleb128 0x11
 1764 00aa 01       		.uleb128 0x1
 1765 00ab 31       		.uleb128 0x31
 1766 00ac 13       		.uleb128 0x13
 1767 00ad 00       		.byte	0
 1768 00ae 00       		.byte	0
 1769 00af 0D       		.uleb128 0xd
 1770 00b0 2E       		.uleb128 0x2e
 1771 00b1 00       		.byte	0
 1772 00b2 3F       		.uleb128 0x3f
 1773 00b3 19       		.uleb128 0x19
 1774 00b4 03       		.uleb128 0x3
 1775 00b5 0E       		.uleb128 0xe
 1776 00b6 3A       		.uleb128 0x3a
 1777 00b7 0B       		.uleb128 0xb
 1778 00b8 3B       		.uleb128 0x3b
 1779 00b9 05       		.uleb128 0x5
 1780 00ba 27       		.uleb128 0x27
 1781 00bb 19       		.uleb128 0x19
 1782 00bc 11       		.uleb128 0x11
 1783 00bd 01       		.uleb128 0x1
 1784 00be 12       		.uleb128 0x12
 1785 00bf 06       		.uleb128 0x6
 1786 00c0 40       		.uleb128 0x40
 1787 00c1 18       		.uleb128 0x18
 1788 00c2 9742     		.uleb128 0x2117
 1789 00c4 19       		.uleb128 0x19
 1790 00c5 00       		.byte	0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 48


 1791 00c6 00       		.byte	0
 1792 00c7 0E       		.uleb128 0xe
 1793 00c8 2E       		.uleb128 0x2e
 1794 00c9 01       		.byte	0x1
 1795 00ca 3F       		.uleb128 0x3f
 1796 00cb 19       		.uleb128 0x19
 1797 00cc 03       		.uleb128 0x3
 1798 00cd 0E       		.uleb128 0xe
 1799 00ce 3A       		.uleb128 0x3a
 1800 00cf 0B       		.uleb128 0xb
 1801 00d0 3B       		.uleb128 0x3b
 1802 00d1 05       		.uleb128 0x5
 1803 00d2 27       		.uleb128 0x27
 1804 00d3 19       		.uleb128 0x19
 1805 00d4 49       		.uleb128 0x49
 1806 00d5 13       		.uleb128 0x13
 1807 00d6 11       		.uleb128 0x11
 1808 00d7 01       		.uleb128 0x1
 1809 00d8 12       		.uleb128 0x12
 1810 00d9 06       		.uleb128 0x6
 1811 00da 40       		.uleb128 0x40
 1812 00db 18       		.uleb128 0x18
 1813 00dc 9742     		.uleb128 0x2117
 1814 00de 19       		.uleb128 0x19
 1815 00df 01       		.uleb128 0x1
 1816 00e0 13       		.uleb128 0x13
 1817 00e1 00       		.byte	0
 1818 00e2 00       		.byte	0
 1819 00e3 0F       		.uleb128 0xf
 1820 00e4 05       		.uleb128 0x5
 1821 00e5 00       		.byte	0
 1822 00e6 03       		.uleb128 0x3
 1823 00e7 0E       		.uleb128 0xe
 1824 00e8 3A       		.uleb128 0x3a
 1825 00e9 0B       		.uleb128 0xb
 1826 00ea 3B       		.uleb128 0x3b
 1827 00eb 05       		.uleb128 0x5
 1828 00ec 49       		.uleb128 0x49
 1829 00ed 13       		.uleb128 0x13
 1830 00ee 02       		.uleb128 0x2
 1831 00ef 17       		.uleb128 0x17
 1832 00f0 00       		.byte	0
 1833 00f1 00       		.byte	0
 1834 00f2 10       		.uleb128 0x10
 1835 00f3 34       		.uleb128 0x34
 1836 00f4 00       		.byte	0
 1837 00f5 03       		.uleb128 0x3
 1838 00f6 0E       		.uleb128 0xe
 1839 00f7 3A       		.uleb128 0x3a
 1840 00f8 0B       		.uleb128 0xb
 1841 00f9 3B       		.uleb128 0x3b
 1842 00fa 05       		.uleb128 0x5
 1843 00fb 49       		.uleb128 0x49
 1844 00fc 13       		.uleb128 0x13
 1845 00fd 02       		.uleb128 0x2
 1846 00fe 17       		.uleb128 0x17
 1847 00ff 00       		.byte	0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 49


 1848 0100 00       		.byte	0
 1849 0101 11       		.uleb128 0x11
 1850 0102 2E       		.uleb128 0x2e
 1851 0103 01       		.byte	0x1
 1852 0104 3F       		.uleb128 0x3f
 1853 0105 19       		.uleb128 0x19
 1854 0106 03       		.uleb128 0x3
 1855 0107 0E       		.uleb128 0xe
 1856 0108 3A       		.uleb128 0x3a
 1857 0109 0B       		.uleb128 0xb
 1858 010a 3B       		.uleb128 0x3b
 1859 010b 05       		.uleb128 0x5
 1860 010c 27       		.uleb128 0x27
 1861 010d 19       		.uleb128 0x19
 1862 010e 49       		.uleb128 0x49
 1863 010f 13       		.uleb128 0x13
 1864 0110 11       		.uleb128 0x11
 1865 0111 01       		.uleb128 0x1
 1866 0112 12       		.uleb128 0x12
 1867 0113 06       		.uleb128 0x6
 1868 0114 40       		.uleb128 0x40
 1869 0115 18       		.uleb128 0x18
 1870 0116 9642     		.uleb128 0x2116
 1871 0118 19       		.uleb128 0x19
 1872 0119 01       		.uleb128 0x1
 1873 011a 13       		.uleb128 0x13
 1874 011b 00       		.byte	0
 1875 011c 00       		.byte	0
 1876 011d 12       		.uleb128 0x12
 1877 011e 34       		.uleb128 0x34
 1878 011f 00       		.byte	0
 1879 0120 03       		.uleb128 0x3
 1880 0121 0E       		.uleb128 0xe
 1881 0122 3A       		.uleb128 0x3a
 1882 0123 0B       		.uleb128 0xb
 1883 0124 3B       		.uleb128 0x3b
 1884 0125 05       		.uleb128 0x5
 1885 0126 49       		.uleb128 0x49
 1886 0127 13       		.uleb128 0x13
 1887 0128 02       		.uleb128 0x2
 1888 0129 18       		.uleb128 0x18
 1889 012a 00       		.byte	0
 1890 012b 00       		.byte	0
 1891 012c 13       		.uleb128 0x13
 1892 012d 34       		.uleb128 0x34
 1893 012e 00       		.byte	0
 1894 012f 03       		.uleb128 0x3
 1895 0130 0E       		.uleb128 0xe
 1896 0131 3A       		.uleb128 0x3a
 1897 0132 0B       		.uleb128 0xb
 1898 0133 3B       		.uleb128 0x3b
 1899 0134 05       		.uleb128 0x5
 1900 0135 49       		.uleb128 0x49
 1901 0136 13       		.uleb128 0x13
 1902 0137 00       		.byte	0
 1903 0138 00       		.byte	0
 1904 0139 14       		.uleb128 0x14
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 50


 1905 013a 01       		.uleb128 0x1
 1906 013b 01       		.byte	0x1
 1907 013c 49       		.uleb128 0x49
 1908 013d 13       		.uleb128 0x13
 1909 013e 01       		.uleb128 0x1
 1910 013f 13       		.uleb128 0x13
 1911 0140 00       		.byte	0
 1912 0141 00       		.byte	0
 1913 0142 15       		.uleb128 0x15
 1914 0143 21       		.uleb128 0x21
 1915 0144 00       		.byte	0
 1916 0145 49       		.uleb128 0x49
 1917 0146 13       		.uleb128 0x13
 1918 0147 2F       		.uleb128 0x2f
 1919 0148 0B       		.uleb128 0xb
 1920 0149 00       		.byte	0
 1921 014a 00       		.byte	0
 1922 014b 16       		.uleb128 0x16
 1923 014c 26       		.uleb128 0x26
 1924 014d 00       		.byte	0
 1925 014e 49       		.uleb128 0x49
 1926 014f 13       		.uleb128 0x13
 1927 0150 00       		.byte	0
 1928 0151 00       		.byte	0
 1929 0152 17       		.uleb128 0x17
 1930 0153 34       		.uleb128 0x34
 1931 0154 00       		.byte	0
 1932 0155 03       		.uleb128 0x3
 1933 0156 0E       		.uleb128 0xe
 1934 0157 3A       		.uleb128 0x3a
 1935 0158 0B       		.uleb128 0xb
 1936 0159 3B       		.uleb128 0x3b
 1937 015a 0B       		.uleb128 0xb
 1938 015b 49       		.uleb128 0x49
 1939 015c 13       		.uleb128 0x13
 1940 015d 1C       		.uleb128 0x1c
 1941 015e 0A       		.uleb128 0xa
 1942 015f 00       		.byte	0
 1943 0160 00       		.byte	0
 1944 0161 18       		.uleb128 0x18
 1945 0162 34       		.uleb128 0x34
 1946 0163 00       		.byte	0
 1947 0164 03       		.uleb128 0x3
 1948 0165 0E       		.uleb128 0xe
 1949 0166 3A       		.uleb128 0x3a
 1950 0167 0B       		.uleb128 0xb
 1951 0168 3B       		.uleb128 0x3b
 1952 0169 0B       		.uleb128 0xb
 1953 016a 49       		.uleb128 0x49
 1954 016b 13       		.uleb128 0x13
 1955 016c 3F       		.uleb128 0x3f
 1956 016d 19       		.uleb128 0x19
 1957 016e 02       		.uleb128 0x2
 1958 016f 18       		.uleb128 0x18
 1959 0170 00       		.byte	0
 1960 0171 00       		.byte	0
 1961 0172 19       		.uleb128 0x19
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 51


 1962 0173 2E       		.uleb128 0x2e
 1963 0174 00       		.byte	0
 1964 0175 3F       		.uleb128 0x3f
 1965 0176 19       		.uleb128 0x19
 1966 0177 3C       		.uleb128 0x3c
 1967 0178 19       		.uleb128 0x19
 1968 0179 6E       		.uleb128 0x6e
 1969 017a 0E       		.uleb128 0xe
 1970 017b 03       		.uleb128 0x3
 1971 017c 0E       		.uleb128 0xe
 1972 017d 3A       		.uleb128 0x3a
 1973 017e 0B       		.uleb128 0xb
 1974 017f 3B       		.uleb128 0x3b
 1975 0180 0B       		.uleb128 0xb
 1976 0181 00       		.byte	0
 1977 0182 00       		.byte	0
 1978 0183 00       		.byte	0
 1979              		.section	.debug_loc,"",%progbits
 1980              	.Ldebug_loc0:
 1981              	.LLST0:
 1982 0000 7A000000 		.4byte	.LVL5
 1983 0004 7E000000 		.4byte	.LVL7
 1984 0008 0200     		.2byte	0x2
 1985 000a 30       		.byte	0x30
 1986 000b 9F       		.byte	0x9f
 1987 000c 7E000000 		.4byte	.LVL7
 1988 0010 14010000 		.4byte	.LFE1
 1989 0014 0100     		.2byte	0x1
 1990 0016 53       		.byte	0x53
 1991 0017 00000000 		.4byte	0
 1992 001b 00000000 		.4byte	0
 1993              	.LLST1:
 1994 001f 72000000 		.4byte	.LVL2
 1995 0023 76000000 		.4byte	.LVL3
 1996 0027 0100     		.2byte	0x1
 1997 0029 50       		.byte	0x50
 1998 002a 76000000 		.4byte	.LVL3
 1999 002e 78000000 		.4byte	.LVL4
 2000 0032 0100     		.2byte	0x1
 2001 0034 52       		.byte	0x52
 2002 0035 78000000 		.4byte	.LVL4
 2003 0039 7C000000 		.4byte	.LVL6
 2004 003d 0100     		.2byte	0x1
 2005 003f 53       		.byte	0x53
 2006 0040 7C000000 		.4byte	.LVL6
 2007 0044 7E000000 		.4byte	.LVL7
 2008 0048 0200     		.2byte	0x2
 2009 004a 71       		.byte	0x71
 2010 004b 00       		.sleb128 0
 2011 004c 7E000000 		.4byte	.LVL7
 2012 0050 AA000000 		.4byte	.LVL9
 2013 0054 0400     		.2byte	0x4
 2014 0056 0A       		.byte	0xa
 2015 0057 0004     		.2byte	0x400
 2016 0059 9F       		.byte	0x9f
 2017 005a 00000000 		.4byte	0
 2018 005e 00000000 		.4byte	0
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 52


 2019              	.LLST2:
 2020 0062 9A000000 		.4byte	.LVL8
 2021 0066 AA000000 		.4byte	.LVL9
 2022 006a 0400     		.2byte	0x4
 2023 006c 0A       		.byte	0xa
 2024 006d 0010     		.2byte	0x1000
 2025 006f 9F       		.byte	0x9f
 2026 0070 00000000 		.4byte	0
 2027 0074 00000000 		.4byte	0
 2028              	.LLST3:
 2029 0078 00000000 		.4byte	.LVL13
 2030 007c 06000000 		.4byte	.LVL15
 2031 0080 0100     		.2byte	0x1
 2032 0082 50       		.byte	0x50
 2033 0083 06000000 		.4byte	.LVL15
 2034 0087 1A000000 		.4byte	.LVL17
 2035 008b 0100     		.2byte	0x1
 2036 008d 52       		.byte	0x52
 2037 008e 1A000000 		.4byte	.LVL17
 2038 0092 20000000 		.4byte	.LVL18
 2039 0096 0400     		.2byte	0x4
 2040 0098 F3       		.byte	0xf3
 2041 0099 01       		.uleb128 0x1
 2042 009a 50       		.byte	0x50
 2043 009b 9F       		.byte	0x9f
 2044 009c 20000000 		.4byte	.LVL18
 2045 00a0 22000000 		.4byte	.LVL19
 2046 00a4 0100     		.2byte	0x1
 2047 00a6 50       		.byte	0x50
 2048 00a7 22000000 		.4byte	.LVL19
 2049 00ab 28000000 		.4byte	.LFE6
 2050 00af 0400     		.2byte	0x4
 2051 00b1 F3       		.byte	0xf3
 2052 00b2 01       		.uleb128 0x1
 2053 00b3 50       		.byte	0x50
 2054 00b4 9F       		.byte	0x9f
 2055 00b5 00000000 		.4byte	0
 2056 00b9 00000000 		.4byte	0
 2057              	.LLST4:
 2058 00bd 02000000 		.4byte	.LVL14
 2059 00c1 06000000 		.4byte	.LVL15
 2060 00c5 0200     		.2byte	0x2
 2061 00c7 30       		.byte	0x30
 2062 00c8 9F       		.byte	0x9f
 2063 00c9 0E000000 		.4byte	.LVL16
 2064 00cd 20000000 		.4byte	.LVL18
 2065 00d1 0100     		.2byte	0x1
 2066 00d3 50       		.byte	0x50
 2067 00d4 20000000 		.4byte	.LVL18
 2068 00d8 22000000 		.4byte	.LVL19
 2069 00dc 0200     		.2byte	0x2
 2070 00de 30       		.byte	0x30
 2071 00df 9F       		.byte	0x9f
 2072 00e0 22000000 		.4byte	.LVL19
 2073 00e4 28000000 		.4byte	.LFE6
 2074 00e8 0100     		.2byte	0x1
 2075 00ea 50       		.byte	0x50
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 53


 2076 00eb 00000000 		.4byte	0
 2077 00ef 00000000 		.4byte	0
 2078              	.LLST5:
 2079 00f3 00000000 		.4byte	.LVL20
 2080 00f7 08000000 		.4byte	.LVL21
 2081 00fb 0100     		.2byte	0x1
 2082 00fd 50       		.byte	0x50
 2083 00fe 08000000 		.4byte	.LVL21
 2084 0102 12000000 		.4byte	.LVL23
 2085 0106 0100     		.2byte	0x1
 2086 0108 54       		.byte	0x54
 2087 0109 12000000 		.4byte	.LVL23
 2088 010d 20000000 		.4byte	.LVL25
 2089 0111 0400     		.2byte	0x4
 2090 0113 F3       		.byte	0xf3
 2091 0114 01       		.uleb128 0x1
 2092 0115 50       		.byte	0x50
 2093 0116 9F       		.byte	0x9f
 2094 0117 20000000 		.4byte	.LVL25
 2095 011b 22000000 		.4byte	.LVL26
 2096 011f 0100     		.2byte	0x1
 2097 0121 54       		.byte	0x54
 2098 0122 22000000 		.4byte	.LVL26
 2099 0126 2C000000 		.4byte	.LFE7
 2100 012a 0400     		.2byte	0x4
 2101 012c F3       		.byte	0xf3
 2102 012d 01       		.uleb128 0x1
 2103 012e 50       		.byte	0x50
 2104 012f 9F       		.byte	0x9f
 2105 0130 00000000 		.4byte	0
 2106 0134 00000000 		.4byte	0
 2107              	.LLST6:
 2108 0138 1E000000 		.4byte	.LVL24
 2109 013c 20000000 		.4byte	.LVL25
 2110 0140 0100     		.2byte	0x1
 2111 0142 50       		.byte	0x50
 2112 0143 22000000 		.4byte	.LVL26
 2113 0147 24000000 		.4byte	.LVL27
 2114 014b 0100     		.2byte	0x1
 2115 014d 50       		.byte	0x50
 2116 014e 00000000 		.4byte	0
 2117 0152 00000000 		.4byte	0
 2118              	.LLST7:
 2119 0156 00000000 		.4byte	.LVL28
 2120 015a 04000000 		.4byte	.LVL29
 2121 015e 0100     		.2byte	0x1
 2122 0160 50       		.byte	0x50
 2123 0161 04000000 		.4byte	.LVL29
 2124 0165 10000000 		.4byte	.LFE8
 2125 0169 0400     		.2byte	0x4
 2126 016b F3       		.byte	0xf3
 2127 016c 01       		.uleb128 0x1
 2128 016d 50       		.byte	0x50
 2129 016e 9F       		.byte	0x9f
 2130 016f 00000000 		.4byte	0
 2131 0173 00000000 		.4byte	0
 2132              	.LLST8:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 54


 2133 0177 00000000 		.4byte	.LVL30
 2134 017b 0E000000 		.4byte	.LVL31
 2135 017f 0100     		.2byte	0x1
 2136 0181 50       		.byte	0x50
 2137 0182 0E000000 		.4byte	.LVL31
 2138 0186 1C000000 		.4byte	.LFE9
 2139 018a 0400     		.2byte	0x4
 2140 018c F3       		.byte	0xf3
 2141 018d 01       		.uleb128 0x1
 2142 018e 50       		.byte	0x50
 2143 018f 9F       		.byte	0x9f
 2144 0190 00000000 		.4byte	0
 2145 0194 00000000 		.4byte	0
 2146              	.LLST9:
 2147 0198 00000000 		.4byte	.LVL32
 2148 019c 0E000000 		.4byte	.LVL33
 2149 01a0 0100     		.2byte	0x1
 2150 01a2 50       		.byte	0x50
 2151 01a3 0E000000 		.4byte	.LVL33
 2152 01a7 18000000 		.4byte	.LFE10
 2153 01ab 0400     		.2byte	0x4
 2154 01ad F3       		.byte	0xf3
 2155 01ae 01       		.uleb128 0x1
 2156 01af 50       		.byte	0x50
 2157 01b0 9F       		.byte	0x9f
 2158 01b1 00000000 		.4byte	0
 2159 01b5 00000000 		.4byte	0
 2160              	.LLST10:
 2161 01b9 00000000 		.4byte	.LVL34
 2162 01bd 04000000 		.4byte	.LVL35
 2163 01c1 0100     		.2byte	0x1
 2164 01c3 50       		.byte	0x50
 2165 01c4 04000000 		.4byte	.LVL35
 2166 01c8 10000000 		.4byte	.LFE11
 2167 01cc 0400     		.2byte	0x4
 2168 01ce F3       		.byte	0xf3
 2169 01cf 01       		.uleb128 0x1
 2170 01d0 50       		.byte	0x50
 2171 01d1 9F       		.byte	0x9f
 2172 01d2 00000000 		.4byte	0
 2173 01d6 00000000 		.4byte	0
 2174              	.LLST11:
 2175 01da 00000000 		.4byte	.LVL36
 2176 01de 04000000 		.4byte	.LVL37
 2177 01e2 0100     		.2byte	0x1
 2178 01e4 50       		.byte	0x50
 2179 01e5 04000000 		.4byte	.LVL37
 2180 01e9 10000000 		.4byte	.LFE12
 2181 01ed 0400     		.2byte	0x4
 2182 01ef F3       		.byte	0xf3
 2183 01f0 01       		.uleb128 0x1
 2184 01f1 50       		.byte	0x50
 2185 01f2 9F       		.byte	0x9f
 2186 01f3 00000000 		.4byte	0
 2187 01f7 00000000 		.4byte	0
 2188              	.LLST12:
 2189 01fb 00000000 		.4byte	.LVL38
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 55


 2190 01ff 0C000000 		.4byte	.LVL39
 2191 0203 0100     		.2byte	0x1
 2192 0205 50       		.byte	0x50
 2193 0206 0C000000 		.4byte	.LVL39
 2194 020a 12000000 		.4byte	.LVL41
 2195 020e 0100     		.2byte	0x1
 2196 0210 54       		.byte	0x54
 2197 0211 12000000 		.4byte	.LVL41
 2198 0215 1C000000 		.4byte	.LFE13
 2199 0219 0400     		.2byte	0x4
 2200 021b F3       		.byte	0xf3
 2201 021c 01       		.uleb128 0x1
 2202 021d 50       		.byte	0x50
 2203 021e 9F       		.byte	0x9f
 2204 021f 00000000 		.4byte	0
 2205 0223 00000000 		.4byte	0
 2206              	.LLST13:
 2207 0227 00000000 		.4byte	.LVL38
 2208 022b 0F000000 		.4byte	.LVL40-1
 2209 022f 0100     		.2byte	0x1
 2210 0231 51       		.byte	0x51
 2211 0232 0F000000 		.4byte	.LVL40-1
 2212 0236 1C000000 		.4byte	.LFE13
 2213 023a 0400     		.2byte	0x4
 2214 023c F3       		.byte	0xf3
 2215 023d 01       		.uleb128 0x1
 2216 023e 51       		.byte	0x51
 2217 023f 9F       		.byte	0x9f
 2218 0240 00000000 		.4byte	0
 2219 0244 00000000 		.4byte	0
 2220              	.LLST14:
 2221 0248 00000000 		.4byte	.LVL42
 2222 024c 0C000000 		.4byte	.LVL43
 2223 0250 0100     		.2byte	0x1
 2224 0252 50       		.byte	0x50
 2225 0253 0C000000 		.4byte	.LVL43
 2226 0257 12000000 		.4byte	.LVL45
 2227 025b 0100     		.2byte	0x1
 2228 025d 54       		.byte	0x54
 2229 025e 12000000 		.4byte	.LVL45
 2230 0262 1C000000 		.4byte	.LFE14
 2231 0266 0400     		.2byte	0x4
 2232 0268 F3       		.byte	0xf3
 2233 0269 01       		.uleb128 0x1
 2234 026a 50       		.byte	0x50
 2235 026b 9F       		.byte	0x9f
 2236 026c 00000000 		.4byte	0
 2237 0270 00000000 		.4byte	0
 2238              	.LLST15:
 2239 0274 00000000 		.4byte	.LVL42
 2240 0278 0F000000 		.4byte	.LVL44-1
 2241 027c 0100     		.2byte	0x1
 2242 027e 51       		.byte	0x51
 2243 027f 0F000000 		.4byte	.LVL44-1
 2244 0283 16000000 		.4byte	.LVL46
 2245 0287 0100     		.2byte	0x1
 2246 0289 55       		.byte	0x55
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 56


 2247 028a 16000000 		.4byte	.LVL46
 2248 028e 1C000000 		.4byte	.LFE14
 2249 0292 0800     		.2byte	0x8
 2250 0294 F3       		.byte	0xf3
 2251 0295 01       		.uleb128 0x1
 2252 0296 50       		.byte	0x50
 2253 0297 32       		.byte	0x32
 2254 0298 24       		.byte	0x24
 2255 0299 73       		.byte	0x73
 2256 029a 00       		.sleb128 0
 2257 029b 22       		.byte	0x22
 2258 029c 00000000 		.4byte	0
 2259 02a0 00000000 		.4byte	0
 2260              	.LLST16:
 2261 02a4 00000000 		.4byte	.LVL47
 2262 02a8 0C000000 		.4byte	.LVL48
 2263 02ac 0100     		.2byte	0x1
 2264 02ae 50       		.byte	0x50
 2265 02af 0C000000 		.4byte	.LVL48
 2266 02b3 44000000 		.4byte	.LVL51
 2267 02b7 0100     		.2byte	0x1
 2268 02b9 54       		.byte	0x54
 2269 02ba 44000000 		.4byte	.LVL51
 2270 02be 5C000000 		.4byte	.LFE15
 2271 02c2 0400     		.2byte	0x4
 2272 02c4 F3       		.byte	0xf3
 2273 02c5 01       		.uleb128 0x1
 2274 02c6 50       		.byte	0x50
 2275 02c7 9F       		.byte	0x9f
 2276 02c8 00000000 		.4byte	0
 2277 02cc 00000000 		.4byte	0
 2278              	.LLST17:
 2279 02d0 00000000 		.4byte	.LVL47
 2280 02d4 0F000000 		.4byte	.LVL49-1
 2281 02d8 0100     		.2byte	0x1
 2282 02da 51       		.byte	0x51
 2283 02db 0F000000 		.4byte	.LVL49-1
 2284 02df 1C000000 		.4byte	.LVL50
 2285 02e3 0400     		.2byte	0x4
 2286 02e5 F3       		.byte	0xf3
 2287 02e6 01       		.uleb128 0x1
 2288 02e7 51       		.byte	0x51
 2289 02e8 9F       		.byte	0x9f
 2290 02e9 1C000000 		.4byte	.LVL50
 2291 02ed 48000000 		.4byte	.LVL52
 2292 02f1 0100     		.2byte	0x1
 2293 02f3 51       		.byte	0x51
 2294 02f4 00000000 		.4byte	0
 2295 02f8 00000000 		.4byte	0
 2296              	.LLST18:
 2297 02fc 00000000 		.4byte	.LVL55
 2298 0300 0C000000 		.4byte	.LVL56
 2299 0304 0100     		.2byte	0x1
 2300 0306 50       		.byte	0x50
 2301 0307 0C000000 		.4byte	.LVL56
 2302 030b 28000000 		.4byte	.LVL60
 2303 030f 0100     		.2byte	0x1
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 57


 2304 0311 55       		.byte	0x55
 2305 0312 28000000 		.4byte	.LVL60
 2306 0316 40000000 		.4byte	.LFE16
 2307 031a 0400     		.2byte	0x4
 2308 031c F3       		.byte	0xf3
 2309 031d 01       		.uleb128 0x1
 2310 031e 50       		.byte	0x50
 2311 031f 9F       		.byte	0x9f
 2312 0320 00000000 		.4byte	0
 2313 0324 00000000 		.4byte	0
 2314              	.LLST19:
 2315 0328 00000000 		.4byte	.LVL55
 2316 032c 0F000000 		.4byte	.LVL57-1
 2317 0330 0100     		.2byte	0x1
 2318 0332 51       		.byte	0x51
 2319 0333 0F000000 		.4byte	.LVL57-1
 2320 0337 1C000000 		.4byte	.LVL58
 2321 033b 0400     		.2byte	0x4
 2322 033d F3       		.byte	0xf3
 2323 033e 01       		.uleb128 0x1
 2324 033f 51       		.byte	0x51
 2325 0340 9F       		.byte	0x9f
 2326 0341 1C000000 		.4byte	.LVL58
 2327 0345 25000000 		.4byte	.LVL59-1
 2328 0349 0100     		.2byte	0x1
 2329 034b 50       		.byte	0x50
 2330 034c 00000000 		.4byte	0
 2331 0350 00000000 		.4byte	0
 2332              	.LLST20:
 2333 0354 00000000 		.4byte	.LVL62
 2334 0358 0C000000 		.4byte	.LVL63
 2335 035c 0100     		.2byte	0x1
 2336 035e 50       		.byte	0x50
 2337 035f 0C000000 		.4byte	.LVL63
 2338 0363 2A000000 		.4byte	.LVL68
 2339 0367 0100     		.2byte	0x1
 2340 0369 54       		.byte	0x54
 2341 036a 2A000000 		.4byte	.LVL68
 2342 036e 48000000 		.4byte	.LFE17
 2343 0372 0400     		.2byte	0x4
 2344 0374 F3       		.byte	0xf3
 2345 0375 01       		.uleb128 0x1
 2346 0376 50       		.byte	0x50
 2347 0377 9F       		.byte	0x9f
 2348 0378 00000000 		.4byte	0
 2349 037c 00000000 		.4byte	0
 2350              	.LLST21:
 2351 0380 00000000 		.4byte	.LVL62
 2352 0384 0F000000 		.4byte	.LVL64-1
 2353 0388 0100     		.2byte	0x1
 2354 038a 51       		.byte	0x51
 2355 038b 0F000000 		.4byte	.LVL64-1
 2356 038f 1C000000 		.4byte	.LVL65
 2357 0393 0400     		.2byte	0x4
 2358 0395 F3       		.byte	0xf3
 2359 0396 01       		.uleb128 0x1
 2360 0397 51       		.byte	0x51
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 58


 2361 0398 9F       		.byte	0x9f
 2362 0399 1C000000 		.4byte	.LVL65
 2363 039d 1F000000 		.4byte	.LVL66-1
 2364 03a1 0100     		.2byte	0x1
 2365 03a3 50       		.byte	0x50
 2366 03a4 00000000 		.4byte	0
 2367 03a8 00000000 		.4byte	0
 2368              		.section	.debug_aranges,"",%progbits
 2369 0000 A4000000 		.4byte	0xa4
 2370 0004 0200     		.2byte	0x2
 2371 0006 00000000 		.4byte	.Ldebug_info0
 2372 000a 04       		.byte	0x4
 2373 000b 00       		.byte	0
 2374 000c 0000     		.2byte	0
 2375 000e 0000     		.2byte	0
 2376 0010 00000000 		.4byte	.LFB1
 2377 0014 14010000 		.4byte	.LFE1-.LFB1
 2378 0018 00000000 		.4byte	.LFB2
 2379 001c 24000000 		.4byte	.LFE2-.LFB2
 2380 0020 00000000 		.4byte	.LFB0
 2381 0024 20000000 		.4byte	.LFE0-.LFB0
 2382 0028 00000000 		.4byte	.LFB3
 2383 002c 10000000 		.4byte	.LFE3-.LFB3
 2384 0030 00000000 		.4byte	.LFB4
 2385 0034 14000000 		.4byte	.LFE4-.LFB4
 2386 0038 00000000 		.4byte	.LFB5
 2387 003c 14000000 		.4byte	.LFE5-.LFB5
 2388 0040 00000000 		.4byte	.LFB6
 2389 0044 28000000 		.4byte	.LFE6-.LFB6
 2390 0048 00000000 		.4byte	.LFB7
 2391 004c 2C000000 		.4byte	.LFE7-.LFB7
 2392 0050 00000000 		.4byte	.LFB8
 2393 0054 10000000 		.4byte	.LFE8-.LFB8
 2394 0058 00000000 		.4byte	.LFB9
 2395 005c 1C000000 		.4byte	.LFE9-.LFB9
 2396 0060 00000000 		.4byte	.LFB10
 2397 0064 18000000 		.4byte	.LFE10-.LFB10
 2398 0068 00000000 		.4byte	.LFB11
 2399 006c 10000000 		.4byte	.LFE11-.LFB11
 2400 0070 00000000 		.4byte	.LFB12
 2401 0074 10000000 		.4byte	.LFE12-.LFB12
 2402 0078 00000000 		.4byte	.LFB13
 2403 007c 1C000000 		.4byte	.LFE13-.LFB13
 2404 0080 00000000 		.4byte	.LFB14
 2405 0084 1C000000 		.4byte	.LFE14-.LFB14
 2406 0088 00000000 		.4byte	.LFB15
 2407 008c 5C000000 		.4byte	.LFE15-.LFB15
 2408 0090 00000000 		.4byte	.LFB16
 2409 0094 40000000 		.4byte	.LFE16-.LFB16
 2410 0098 00000000 		.4byte	.LFB17
 2411 009c 48000000 		.4byte	.LFE17-.LFB17
 2412 00a0 00000000 		.4byte	0
 2413 00a4 00000000 		.4byte	0
 2414              		.section	.debug_ranges,"",%progbits
 2415              	.Ldebug_ranges0:
 2416 0000 00000000 		.4byte	.LFB1
 2417 0004 14010000 		.4byte	.LFE1
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 59


 2418 0008 00000000 		.4byte	.LFB2
 2419 000c 24000000 		.4byte	.LFE2
 2420 0010 00000000 		.4byte	.LFB0
 2421 0014 20000000 		.4byte	.LFE0
 2422 0018 00000000 		.4byte	.LFB3
 2423 001c 10000000 		.4byte	.LFE3
 2424 0020 00000000 		.4byte	.LFB4
 2425 0024 14000000 		.4byte	.LFE4
 2426 0028 00000000 		.4byte	.LFB5
 2427 002c 14000000 		.4byte	.LFE5
 2428 0030 00000000 		.4byte	.LFB6
 2429 0034 28000000 		.4byte	.LFE6
 2430 0038 00000000 		.4byte	.LFB7
 2431 003c 2C000000 		.4byte	.LFE7
 2432 0040 00000000 		.4byte	.LFB8
 2433 0044 10000000 		.4byte	.LFE8
 2434 0048 00000000 		.4byte	.LFB9
 2435 004c 1C000000 		.4byte	.LFE9
 2436 0050 00000000 		.4byte	.LFB10
 2437 0054 18000000 		.4byte	.LFE10
 2438 0058 00000000 		.4byte	.LFB11
 2439 005c 10000000 		.4byte	.LFE11
 2440 0060 00000000 		.4byte	.LFB12
 2441 0064 10000000 		.4byte	.LFE12
 2442 0068 00000000 		.4byte	.LFB13
 2443 006c 1C000000 		.4byte	.LFE13
 2444 0070 00000000 		.4byte	.LFB14
 2445 0074 1C000000 		.4byte	.LFE14
 2446 0078 00000000 		.4byte	.LFB15
 2447 007c 5C000000 		.4byte	.LFE15
 2448 0080 00000000 		.4byte	.LFB16
 2449 0084 40000000 		.4byte	.LFE16
 2450 0088 00000000 		.4byte	.LFB17
 2451 008c 48000000 		.4byte	.LFE17
 2452 0090 00000000 		.4byte	0
 2453 0094 00000000 		.4byte	0
 2454              		.section	.debug_line,"",%progbits
 2455              	.Ldebug_line0:
 2456 0000 7E020000 		.section	.debug_str,"MS",%progbits,1
 2456      02005300 
 2456      00000201 
 2456      FB0E0D00 
 2456      01010101 
 2457              	.LASF10:
 2458 0000 75696E74 		.ascii	"uint16\000"
 2458      313600
 2459              	.LASF48:
 2460 0007 61646347 		.ascii	"adcGain\000"
 2460      61696E00 
 2461              	.LASF24:
 2462 000f 636F756E 		.ascii	"counts\000"
 2462      747300
 2463              	.LASF47:
 2464 0016 4144435F 		.ascii	"ADC_SAR_SEQ_SetGain\000"
 2464      5341525F 
 2464      5345515F 
 2464      53657447 
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 60


 2464      61696E00 
 2465              	.LASF45:
 2466 002a 4144435F 		.ascii	"ADC_SAR_SEQ_SetOffset\000"
 2466      5341525F 
 2466      5345515F 
 2466      5365744F 
 2466      66667365 
 2467              	.LASF27:
 2468 0040 4144435F 		.ascii	"ADC_SAR_SEQ_Start\000"
 2468      5341525F 
 2468      5345515F 
 2468      53746172 
 2468      7400
 2469              	.LASF63:
 2470 0052 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2470      43313120 
 2470      352E342E 
 2470      31203230 
 2470      31363036 
 2471 0085 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2471      20726576 
 2471      6973696F 
 2471      6E203233 
 2471      37373135 
 2472 00b8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2472      66756E63 
 2472      74696F6E 
 2472      2D736563 
 2472      74696F6E 
 2473              	.LASF7:
 2474 00e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2474      206C6F6E 
 2474      6720756E 
 2474      7369676E 
 2474      65642069 
 2475              	.LASF57:
 2476 00f7 4144435F 		.ascii	"ADC_SAR_SEQ_offset\000"
 2476      5341525F 
 2476      5345515F 
 2476      6F666673 
 2476      657400
 2477              	.LASF37:
 2478 010a 4144435F 		.ascii	"ADC_SAR_SEQ_SetChanMask\000"
 2478      5341525F 
 2478      5345515F 
 2478      53657443 
 2478      68616E4D 
 2479              	.LASF6:
 2480 0122 6C6F6E67 		.ascii	"long long int\000"
 2480      206C6F6E 
 2480      6720696E 
 2480      7400
 2481              	.LASF0:
 2482 0130 7369676E 		.ascii	"signed char\000"
 2482      65642063 
 2482      68617200 
 2483              	.LASF13:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 61


 2484 013c 696E7433 		.ascii	"int32\000"
 2484      3200
 2485              	.LASF4:
 2486 0142 6C6F6E67 		.ascii	"long int\000"
 2486      20696E74 
 2486      00
 2487              	.LASF9:
 2488 014b 75696E74 		.ascii	"uint8\000"
 2488      3800
 2489              	.LASF30:
 2490 0151 4144435F 		.ascii	"ADC_SAR_SEQ_StopConvert\000"
 2490      5341525F 
 2490      5345515F 
 2490      53746F70 
 2490      436F6E76 
 2491              	.LASF61:
 2492 0169 43794465 		.ascii	"CyDelayUs\000"
 2492      6C617955 
 2492      7300
 2493              	.LASF16:
 2494 0173 646F7562 		.ascii	"double\000"
 2494      6C6500
 2495              	.LASF11:
 2496 017a 75696E74 		.ascii	"uint32\000"
 2496      333200
 2497              	.LASF38:
 2498 0181 6D61736B 		.ascii	"mask\000"
 2498      00
 2499              	.LASF34:
 2500 0186 7265744D 		.ascii	"retMode\000"
 2500      6F646500 
 2501              	.LASF64:
 2502 018e 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_SEQ.c\000"
 2502      72617465 
 2502      645F536F 
 2502      75726365 
 2502      5C50536F 
 2503              	.LASF8:
 2504 01b3 756E7369 		.ascii	"unsigned int\000"
 2504      676E6564 
 2504      20696E74 
 2504      00
 2505              	.LASF52:
 2506 01c0 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_uVolts\000"
 2506      5341525F 
 2506      5345515F 
 2506      436F756E 
 2506      7473546F 
 2507              	.LASF66:
 2508 01dc 75566F6C 		.ascii	"uVolts\000"
 2508      747300
 2509              	.LASF5:
 2510 01e3 6C6F6E67 		.ascii	"long unsigned int\000"
 2510      20756E73 
 2510      69676E65 
 2510      6420696E 
 2510      7400
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 62


 2511              	.LASF54:
 2512 01f5 766F6C74 		.ascii	"volts\000"
 2512      7300
 2513              	.LASF23:
 2514 01fb 746D7052 		.ascii	"tmpRegVal\000"
 2514      65675661 
 2514      6C00
 2515              	.LASF3:
 2516 0205 73686F72 		.ascii	"short unsigned int\000"
 2516      7420756E 
 2516      7369676E 
 2516      65642069 
 2516      6E7400
 2517              	.LASF65:
 2518 0218 463A5C50 		.ascii	"F:\\Psoc project\\Hadi\\Workspace01\\Design01.cydsn"
 2518      736F6320 
 2518      70726F6A 
 2518      6563745C 
 2518      48616469 
 2519 0247 00       		.ascii	"\000"
 2520              	.LASF60:
 2521 0248 4379496E 		.ascii	"CyIntSetVector\000"
 2521      74536574 
 2521      56656374 
 2521      6F7200
 2522              	.LASF49:
 2523 0257 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_mVolts\000"
 2523      5341525F 
 2523      5345515F 
 2523      436F756E 
 2523      7473546F 
 2524              	.LASF39:
 2525 0273 4144435F 		.ascii	"ADC_SAR_SEQ_SetLowLimit\000"
 2525      5341525F 
 2525      5345515F 
 2525      5365744C 
 2525      6F774C69 
 2526              	.LASF19:
 2527 028b 72656733 		.ascii	"reg32\000"
 2527      3200
 2528              	.LASF14:
 2529 0291 666C6F61 		.ascii	"float32\000"
 2529      74333200 
 2530              	.LASF21:
 2531 0299 73697A65 		.ascii	"sizetype\000"
 2531      74797065 
 2531      00
 2532              	.LASF40:
 2533 02a2 6C6F774C 		.ascii	"lowLimit\000"
 2533      696D6974 
 2533      00
 2534              	.LASF20:
 2535 02ab 6C6F6E67 		.ascii	"long double\000"
 2535      20646F75 
 2535      626C6500 
 2536              	.LASF44:
 2537 02b7 4144435F 		.ascii	"ADC_SAR_SEQ_SetSatMask\000"
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 63


 2537      5341525F 
 2537      5345515F 
 2537      53657453 
 2537      61744D61 
 2538              	.LASF17:
 2539 02ce 696E7436 		.ascii	"int64\000"
 2539      3400
 2540              	.LASF28:
 2541 02d4 4144435F 		.ascii	"ADC_SAR_SEQ_Stop\000"
 2541      5341525F 
 2541      5345515F 
 2541      53746F70 
 2541      00
 2542              	.LASF59:
 2543 02e5 4379496E 		.ascii	"CyIntSetPriority\000"
 2543      74536574 
 2543      5072696F 
 2543      72697479 
 2543      00
 2544              	.LASF26:
 2545 02f6 4144435F 		.ascii	"ADC_SAR_SEQ_Enable\000"
 2545      5341525F 
 2545      5345515F 
 2545      456E6162 
 2545      6C6500
 2546              	.LASF15:
 2547 0309 666C6F61 		.ascii	"float\000"
 2547      7400
 2548              	.LASF42:
 2549 030f 68696768 		.ascii	"highLimit\000"
 2549      4C696D69 
 2549      7400
 2550              	.LASF43:
 2551 0319 4144435F 		.ascii	"ADC_SAR_SEQ_SetLimitMask\000"
 2551      5341525F 
 2551      5345515F 
 2551      5365744C 
 2551      696D6974 
 2552              	.LASF62:
 2553 0332 43794861 		.ascii	"CyHalt\000"
 2553      6C7400
 2554              	.LASF1:
 2555 0339 756E7369 		.ascii	"unsigned char\000"
 2555      676E6564 
 2555      20636861 
 2555      7200
 2556              	.LASF2:
 2557 0347 73686F72 		.ascii	"short int\000"
 2557      7420696E 
 2557      7400
 2558              	.LASF32:
 2559 0351 4144435F 		.ascii	"ADC_SAR_SEQ_IsEndConversion\000"
 2559      5341525F 
 2559      5345515F 
 2559      4973456E 
 2559      64436F6E 
 2560              	.LASF51:
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 64


 2561 036d 6D566F6C 		.ascii	"mVolts\000"
 2561      747300
 2562              	.LASF58:
 2563 0374 4144435F 		.ascii	"ADC_SAR_SEQ_countsPer10Volt\000"
 2563      5341525F 
 2563      5345515F 
 2563      636F756E 
 2563      74735065 
 2564              	.LASF29:
 2565 0390 4144435F 		.ascii	"ADC_SAR_SEQ_StartConvert\000"
 2565      5341525F 
 2565      5345515F 
 2565      53746172 
 2565      74436F6E 
 2566              	.LASF22:
 2567 03a9 63684E75 		.ascii	"chNum\000"
 2567      6D00
 2568              	.LASF55:
 2569 03af 4144435F 		.ascii	"ADC_SAR_SEQ_channelsConfig\000"
 2569      5341525F 
 2569      5345515F 
 2569      6368616E 
 2569      6E656C73 
 2570              	.LASF56:
 2571 03ca 4144435F 		.ascii	"ADC_SAR_SEQ_initVar\000"
 2571      5341525F 
 2571      5345515F 
 2571      696E6974 
 2571      56617200 
 2572              	.LASF35:
 2573 03de 6368616E 		.ascii	"chan\000"
 2573      00
 2574              	.LASF18:
 2575 03e3 63686172 		.ascii	"char\000"
 2575      00
 2576              	.LASF33:
 2577 03e8 4144435F 		.ascii	"ADC_SAR_SEQ_GetResult16\000"
 2577      5341525F 
 2577      5345515F 
 2577      47657452 
 2577      6573756C 
 2578              	.LASF46:
 2579 0400 6F666673 		.ascii	"offset\000"
 2579      657400
 2580              	.LASF41:
 2581 0407 4144435F 		.ascii	"ADC_SAR_SEQ_SetHighLimit\000"
 2581      5341525F 
 2581      5345515F 
 2581      53657448 
 2581      6967684C 
 2582              	.LASF50:
 2583 0420 61646343 		.ascii	"adcCounts\000"
 2583      6F756E74 
 2583      7300
 2584              	.LASF31:
 2585 042a 73746174 		.ascii	"status\000"
 2585      757300
ARM GAS  C:\Users\Keyarash\AppData\Local\Temp\cc9BbfkJ.s 			page 65


 2586              	.LASF12:
 2587 0431 696E7431 		.ascii	"int16\000"
 2587      3600
 2588              	.LASF25:
 2589 0437 4144435F 		.ascii	"ADC_SAR_SEQ_Init\000"
 2589      5341525F 
 2589      5345515F 
 2589      496E6974 
 2589      00
 2590              	.LASF36:
 2591 0448 72657375 		.ascii	"result\000"
 2591      6C7400
 2592              	.LASF53:
 2593 044f 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_Volts\000"
 2593      5341525F 
 2593      5345515F 
 2593      436F756E 
 2593      7473546F 
 2594              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
